Terminals which are not used

   BOOL
   CONDICOES
   SEPARADOR


State 34 conflicts: 2 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: declaracoes

    2 declaracoes: declaracoes declaracao
    3            | declaracao

    4 declaracao: var_decl
    5           | TUPLE declaracao_tupla
    6           | func_decl

    7 declaracao_tupla: TIPO ',' declaracao_tupla
    8                 | var_decl

    9 var_decl: TIPO ID ';'

   10 func_decl: TIPO ID '(' parm_tipos ')' ';'
   11          | TIPO ID '(' ')' ';'
   12          | TIPO ID '(' parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO ID '(' ')' '{' cod_blocks '}'

   14 parm_tipos: parm_tipos TIPO ID
   15           | parm_tipos TIPO ID '[' ']'
   16           | TIPO ID
   17           | TIPO ID '[' ']'

   18 cod_blocks: cod_blocks cod_block
   19           | cod_block

   20 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}'
   21          | "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'
   22          | LACOS '(' expressao_logica ')' '{' cod_block '}'
   23          | RETORNO ';'
   24          | RETORNO termo ';'
   25          | RETORNO '(' expressao ')' ';'
   26          | assign ';'
   27          | print
   28          | ID '(' expressao ')' ';'
   29          | ID '(' ')' ';'
   30          | scan '(' ID ')' ';'
   31          | declaracoes

   32 assign: ID OP_ASSIGN expressao
   33       | ID '[' INT ']' OP_ASSIGN expressao

   34 expressao: op_expressao
   35          | '(' expressao ')'

   36 expressao_logica: OP_LOG op_expressao
   37                 | '!' op_expressao
   38                 | op_expressao OP_COMP op_expressao
   39                 | '(' op_expressao ')'
   40                 | op_expressao

   41 op_expressao: op_expressao OP_ARITM termo
   42             | termo

   43 termo: ID
   44      | INT
   45      | FLOAT

   46 scan: SCAN '(' ID ')'

   47 print: PRINT '(' termo ')' ';'
   48      | PRINT '(' palavra ')' ';'

   49 palavra: palavra LETRA
   50        | palavra DIGITO
   51        | LETRA
   52        | DIGITO


Terminals, with rules where they appear

$end (0) 0
'!' (33) 37
'(' (40) 10 11 12 13 20 21 22 25 28 29 30 35 39 46 47 48
')' (41) 10 11 12 13 20 21 22 25 28 29 30 35 39 46 47 48
',' (44) 7
';' (59) 9 10 11 23 24 25 26 28 29 30 47 48
'[' (91) 15 17 33
']' (93) 15 17 33
'{' (123) 12 13 20 21 22
'}' (125) 12 13 20 21 22
error (256)
OP_ARITM (258) 41
OP_COMP (259) 38
OP_LOG (260) 36
OP_ASSIGN (261) 32 33
BOOL (262)
TIPO (263) 7 9 10 11 12 13 14 15 16 17
CONDICOES (264)
LACOS (265) 22
RETORNO (266) 23 24 25
INT (267) 33 44
FLOAT (268) 45
TUPLE (269) 5
ID (270) 9 10 11 12 13 14 15 16 17 28 29 30 32 33 43 46
DIGITO (271) 50 52
LETRA (272) 49 51
SEPARADOR (273)
PRINT (274) 47 48
SCAN (275) 46
"if" (276) 20 21
"else" (277) 21


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
programa (33)
    on left: 1, on right: 0
declaracoes (34)
    on left: 2 3, on right: 1 2 31
declaracao (35)
    on left: 4 5 6, on right: 2 3
declaracao_tupla (36)
    on left: 7 8, on right: 5 7
var_decl (37)
    on left: 9, on right: 4 8
func_decl (38)
    on left: 10 11 12 13, on right: 6
parm_tipos (39)
    on left: 14 15 16 17, on right: 10 12 14 15
cod_blocks (40)
    on left: 18 19, on right: 12 13 18 20 21
cod_block (41)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31, on right: 18 19 22
assign (42)
    on left: 32 33, on right: 26
expressao (43)
    on left: 34 35, on right: 25 28 32 33 35
expressao_logica (44)
    on left: 36 37 38 39 40, on right: 20 21 22
op_expressao (45)
    on left: 41 42, on right: 34 36 37 38 39 40 41
termo (46)
    on left: 43 44 45, on right: 24 41 42 47
scan (47)
    on left: 46, on right: 30
print (48)
    on left: 47 48, on right: 27
palavra (49)
    on left: 49 50 51 52, on right: 48 49 50


state 0

    0 $accept: . programa $end

    TIPO   shift, and go to state 1
    TUPLE  shift, and go to state 2

    programa     go to state 3
    declaracoes  go to state 4
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7


state 1

    9 var_decl: TIPO . ID ';'
   10 func_decl: TIPO . ID '(' parm_tipos ')' ';'
   11          | TIPO . ID '(' ')' ';'
   12          | TIPO . ID '(' parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO . ID '(' ')' '{' cod_blocks '}'

    ID  shift, and go to state 8


state 2

    5 declaracao: TUPLE . declaracao_tupla

    TIPO  shift, and go to state 9

    declaracao_tupla  go to state 10
    var_decl          go to state 11


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 12


state 4

    1 programa: declaracoes .
    2 declaracoes: declaracoes . declaracao

    TIPO   shift, and go to state 1
    TUPLE  shift, and go to state 2

    $default  reduce using rule 1 (programa)

    declaracao  go to state 13
    var_decl    go to state 6
    func_decl   go to state 7


state 5

    3 declaracoes: declaracao .

    $default  reduce using rule 3 (declaracoes)


state 6

    4 declaracao: var_decl .

    $default  reduce using rule 4 (declaracao)


state 7

    6 declaracao: func_decl .

    $default  reduce using rule 6 (declaracao)


state 8

    9 var_decl: TIPO ID . ';'
   10 func_decl: TIPO ID . '(' parm_tipos ')' ';'
   11          | TIPO ID . '(' ')' ';'
   12          | TIPO ID . '(' parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO ID . '(' ')' '{' cod_blocks '}'

    ';'  shift, and go to state 14
    '('  shift, and go to state 15


state 9

    7 declaracao_tupla: TIPO . ',' declaracao_tupla
    9 var_decl: TIPO . ID ';'

    ID   shift, and go to state 16
    ','  shift, and go to state 17


state 10

    5 declaracao: TUPLE declaracao_tupla .

    $default  reduce using rule 5 (declaracao)


state 11

    8 declaracao_tupla: var_decl .

    $default  reduce using rule 8 (declaracao_tupla)


state 12

    0 $accept: programa $end .

    $default  accept


state 13

    2 declaracoes: declaracoes declaracao .

    $default  reduce using rule 2 (declaracoes)


state 14

    9 var_decl: TIPO ID ';' .

    $default  reduce using rule 9 (var_decl)


state 15

   10 func_decl: TIPO ID '(' . parm_tipos ')' ';'
   11          | TIPO ID '(' . ')' ';'
   12          | TIPO ID '(' . parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO ID '(' . ')' '{' cod_blocks '}'

    TIPO  shift, and go to state 18
    ')'   shift, and go to state 19

    parm_tipos  go to state 20


state 16

    9 var_decl: TIPO ID . ';'

    ';'  shift, and go to state 14


state 17

    7 declaracao_tupla: TIPO ',' . declaracao_tupla

    TIPO  shift, and go to state 9

    declaracao_tupla  go to state 21
    var_decl          go to state 11


state 18

   16 parm_tipos: TIPO . ID
   17           | TIPO . ID '[' ']'

    ID  shift, and go to state 22


state 19

   11 func_decl: TIPO ID '(' ')' . ';'
   13          | TIPO ID '(' ')' . '{' cod_blocks '}'

    ';'  shift, and go to state 23
    '{'  shift, and go to state 24


state 20

   10 func_decl: TIPO ID '(' parm_tipos . ')' ';'
   12          | TIPO ID '(' parm_tipos . ')' '{' cod_blocks '}'
   14 parm_tipos: parm_tipos . TIPO ID
   15           | parm_tipos . TIPO ID '[' ']'

    TIPO  shift, and go to state 25
    ')'   shift, and go to state 26


state 21

    7 declaracao_tupla: TIPO ',' declaracao_tupla .

    $default  reduce using rule 7 (declaracao_tupla)


state 22

   16 parm_tipos: TIPO ID .
   17           | TIPO ID . '[' ']'

    '['  shift, and go to state 27

    $default  reduce using rule 16 (parm_tipos)


state 23

   11 func_decl: TIPO ID '(' ')' ';' .

    $default  reduce using rule 11 (func_decl)


state 24

   13 func_decl: TIPO ID '(' ')' '{' . cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 35
    cod_block    go to state 36
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 25

   14 parm_tipos: parm_tipos TIPO . ID
   15           | parm_tipos TIPO . ID '[' ']'

    ID  shift, and go to state 40


state 26

   10 func_decl: TIPO ID '(' parm_tipos ')' . ';'
   12          | TIPO ID '(' parm_tipos ')' . '{' cod_blocks '}'

    ';'  shift, and go to state 41
    '{'  shift, and go to state 42


state 27

   17 parm_tipos: TIPO ID '[' . ']'

    ']'  shift, and go to state 43


state 28

   22 cod_block: LACOS . '(' expressao_logica ')' '{' cod_block '}'

    '('  shift, and go to state 44


state 29

   23 cod_block: RETORNO . ';'
   24          | RETORNO . termo ';'
   25          | RETORNO . '(' expressao ')' ';'

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    ';'    shift, and go to state 48
    '('    shift, and go to state 49

    termo  go to state 50


state 30

   28 cod_block: ID . '(' expressao ')' ';'
   29          | ID . '(' ')' ';'
   32 assign: ID . OP_ASSIGN expressao
   33       | ID . '[' INT ']' OP_ASSIGN expressao

    OP_ASSIGN  shift, and go to state 51
    '('        shift, and go to state 52
    '['        shift, and go to state 53


state 31

   47 print: PRINT . '(' termo ')' ';'
   48      | PRINT . '(' palavra ')' ';'

    '('  shift, and go to state 54


state 32

   46 scan: SCAN . '(' ID ')'

    '('  shift, and go to state 55


state 33

   20 cod_block: "if" . '(' expressao_logica ')' '{' cod_blocks '}'
   21          | "if" . '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'

    '('  shift, and go to state 56


state 34

    2 declaracoes: declaracoes . declaracao
   31 cod_block: declaracoes .

    TIPO   shift, and go to state 1
    TUPLE  shift, and go to state 2

    TIPO      [reduce using rule 31 (cod_block)]
    TUPLE     [reduce using rule 31 (cod_block)]
    $default  reduce using rule 31 (cod_block)

    declaracao  go to state 13
    var_decl    go to state 6
    func_decl   go to state 7


state 35

   13 func_decl: TIPO ID '(' ')' '{' cod_blocks . '}'
   18 cod_blocks: cod_blocks . cod_block

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    '}'      shift, and go to state 57
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 58
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 36

   19 cod_blocks: cod_block .

    $default  reduce using rule 19 (cod_blocks)


state 37

   26 cod_block: assign . ';'

    ';'  shift, and go to state 59


state 38

   30 cod_block: scan . '(' ID ')' ';'

    '('  shift, and go to state 60


state 39

   27 cod_block: print .

    $default  reduce using rule 27 (cod_block)


state 40

   14 parm_tipos: parm_tipos TIPO ID .
   15           | parm_tipos TIPO ID . '[' ']'

    '['  shift, and go to state 61

    $default  reduce using rule 14 (parm_tipos)


state 41

   10 func_decl: TIPO ID '(' parm_tipos ')' ';' .

    $default  reduce using rule 10 (func_decl)


state 42

   12 func_decl: TIPO ID '(' parm_tipos ')' '{' . cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 62
    cod_block    go to state 36
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 43

   17 parm_tipos: TIPO ID '[' ']' .

    $default  reduce using rule 17 (parm_tipos)


state 44

   22 cod_block: LACOS '(' . expressao_logica ')' '{' cod_block '}'

    OP_LOG  shift, and go to state 63
    INT     shift, and go to state 45
    FLOAT   shift, and go to state 46
    ID      shift, and go to state 47
    '('     shift, and go to state 64
    '!'     shift, and go to state 65

    expressao_logica  go to state 66
    op_expressao      go to state 67
    termo             go to state 68


state 45

   44 termo: INT .

    $default  reduce using rule 44 (termo)


state 46

   45 termo: FLOAT .

    $default  reduce using rule 45 (termo)


state 47

   43 termo: ID .

    $default  reduce using rule 43 (termo)


state 48

   23 cod_block: RETORNO ';' .

    $default  reduce using rule 23 (cod_block)


state 49

   25 cod_block: RETORNO '(' . expressao ')' ';'

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    '('    shift, and go to state 69

    expressao     go to state 70
    op_expressao  go to state 71
    termo         go to state 68


state 50

   24 cod_block: RETORNO termo . ';'

    ';'  shift, and go to state 72


state 51

   32 assign: ID OP_ASSIGN . expressao

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    '('    shift, and go to state 69

    expressao     go to state 73
    op_expressao  go to state 71
    termo         go to state 68


state 52

   28 cod_block: ID '(' . expressao ')' ';'
   29          | ID '(' . ')' ';'

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    '('    shift, and go to state 69
    ')'    shift, and go to state 74

    expressao     go to state 75
    op_expressao  go to state 71
    termo         go to state 68


state 53

   33 assign: ID '[' . INT ']' OP_ASSIGN expressao

    INT  shift, and go to state 76


state 54

   47 print: PRINT '(' . termo ')' ';'
   48      | PRINT '(' . palavra ')' ';'

    INT     shift, and go to state 45
    FLOAT   shift, and go to state 46
    ID      shift, and go to state 47
    DIGITO  shift, and go to state 77
    LETRA   shift, and go to state 78

    termo    go to state 79
    palavra  go to state 80


state 55

   46 scan: SCAN '(' . ID ')'

    ID  shift, and go to state 81


state 56

   20 cod_block: "if" '(' . expressao_logica ')' '{' cod_blocks '}'
   21          | "if" '(' . expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'

    OP_LOG  shift, and go to state 63
    INT     shift, and go to state 45
    FLOAT   shift, and go to state 46
    ID      shift, and go to state 47
    '('     shift, and go to state 64
    '!'     shift, and go to state 65

    expressao_logica  go to state 82
    op_expressao      go to state 67
    termo             go to state 68


state 57

   13 func_decl: TIPO ID '(' ')' '{' cod_blocks '}' .

    $default  reduce using rule 13 (func_decl)


state 58

   18 cod_blocks: cod_blocks cod_block .

    $default  reduce using rule 18 (cod_blocks)


state 59

   26 cod_block: assign ';' .

    $default  reduce using rule 26 (cod_block)


state 60

   30 cod_block: scan '(' . ID ')' ';'

    ID  shift, and go to state 83


state 61

   15 parm_tipos: parm_tipos TIPO ID '[' . ']'

    ']'  shift, and go to state 84


state 62

   12 func_decl: TIPO ID '(' parm_tipos ')' '{' cod_blocks . '}'
   18 cod_blocks: cod_blocks . cod_block

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    '}'      shift, and go to state 85
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 58
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 63

   36 expressao_logica: OP_LOG . op_expressao

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47

    op_expressao  go to state 86
    termo         go to state 68


state 64

   39 expressao_logica: '(' . op_expressao ')'

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47

    op_expressao  go to state 87
    termo         go to state 68


state 65

   37 expressao_logica: '!' . op_expressao

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47

    op_expressao  go to state 88
    termo         go to state 68


state 66

   22 cod_block: LACOS '(' expressao_logica . ')' '{' cod_block '}'

    ')'  shift, and go to state 89


state 67

   38 expressao_logica: op_expressao . OP_COMP op_expressao
   40                 | op_expressao .
   41 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 90
    OP_COMP   shift, and go to state 91

    $default  reduce using rule 40 (expressao_logica)


state 68

   42 op_expressao: termo .

    $default  reduce using rule 42 (op_expressao)


state 69

   35 expressao: '(' . expressao ')'

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    '('    shift, and go to state 69

    expressao     go to state 92
    op_expressao  go to state 71
    termo         go to state 68


state 70

   25 cod_block: RETORNO '(' expressao . ')' ';'

    ')'  shift, and go to state 93


state 71

   34 expressao: op_expressao .
   41 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 90

    $default  reduce using rule 34 (expressao)


state 72

   24 cod_block: RETORNO termo ';' .

    $default  reduce using rule 24 (cod_block)


state 73

   32 assign: ID OP_ASSIGN expressao .

    $default  reduce using rule 32 (assign)


state 74

   29 cod_block: ID '(' ')' . ';'

    ';'  shift, and go to state 94


state 75

   28 cod_block: ID '(' expressao . ')' ';'

    ')'  shift, and go to state 95


state 76

   33 assign: ID '[' INT . ']' OP_ASSIGN expressao

    ']'  shift, and go to state 96


state 77

   52 palavra: DIGITO .

    $default  reduce using rule 52 (palavra)


state 78

   51 palavra: LETRA .

    $default  reduce using rule 51 (palavra)


state 79

   47 print: PRINT '(' termo . ')' ';'

    ')'  shift, and go to state 97


state 80

   48 print: PRINT '(' palavra . ')' ';'
   49 palavra: palavra . LETRA
   50        | palavra . DIGITO

    DIGITO  shift, and go to state 98
    LETRA   shift, and go to state 99
    ')'     shift, and go to state 100


state 81

   46 scan: SCAN '(' ID . ')'

    ')'  shift, and go to state 101


state 82

   20 cod_block: "if" '(' expressao_logica . ')' '{' cod_blocks '}'
   21          | "if" '(' expressao_logica . ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'

    ')'  shift, and go to state 102


state 83

   30 cod_block: scan '(' ID . ')' ';'

    ')'  shift, and go to state 103


state 84

   15 parm_tipos: parm_tipos TIPO ID '[' ']' .

    $default  reduce using rule 15 (parm_tipos)


state 85

   12 func_decl: TIPO ID '(' parm_tipos ')' '{' cod_blocks '}' .

    $default  reduce using rule 12 (func_decl)


state 86

   36 expressao_logica: OP_LOG op_expressao .
   41 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 90

    $default  reduce using rule 36 (expressao_logica)


state 87

   39 expressao_logica: '(' op_expressao . ')'
   41 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 90
    ')'       shift, and go to state 104


state 88

   37 expressao_logica: '!' op_expressao .
   41 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 90

    $default  reduce using rule 37 (expressao_logica)


state 89

   22 cod_block: LACOS '(' expressao_logica ')' . '{' cod_block '}'

    '{'  shift, and go to state 105


state 90

   41 op_expressao: op_expressao OP_ARITM . termo

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47

    termo  go to state 106


state 91

   38 expressao_logica: op_expressao OP_COMP . op_expressao

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47

    op_expressao  go to state 107
    termo         go to state 68


state 92

   35 expressao: '(' expressao . ')'

    ')'  shift, and go to state 108


state 93

   25 cod_block: RETORNO '(' expressao ')' . ';'

    ';'  shift, and go to state 109


state 94

   29 cod_block: ID '(' ')' ';' .

    $default  reduce using rule 29 (cod_block)


state 95

   28 cod_block: ID '(' expressao ')' . ';'

    ';'  shift, and go to state 110


state 96

   33 assign: ID '[' INT ']' . OP_ASSIGN expressao

    OP_ASSIGN  shift, and go to state 111


state 97

   47 print: PRINT '(' termo ')' . ';'

    ';'  shift, and go to state 112


state 98

   50 palavra: palavra DIGITO .

    $default  reduce using rule 50 (palavra)


state 99

   49 palavra: palavra LETRA .

    $default  reduce using rule 49 (palavra)


state 100

   48 print: PRINT '(' palavra ')' . ';'

    ';'  shift, and go to state 113


state 101

   46 scan: SCAN '(' ID ')' .

    $default  reduce using rule 46 (scan)


state 102

   20 cod_block: "if" '(' expressao_logica ')' . '{' cod_blocks '}'
   21          | "if" '(' expressao_logica ')' . '{' cod_blocks '}' "else" '{' cod_blocks '}'

    '{'  shift, and go to state 114


state 103

   30 cod_block: scan '(' ID ')' . ';'

    ';'  shift, and go to state 115


state 104

   39 expressao_logica: '(' op_expressao ')' .

    $default  reduce using rule 39 (expressao_logica)


state 105

   22 cod_block: LACOS '(' expressao_logica ')' '{' . cod_block '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 116
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 106

   41 op_expressao: op_expressao OP_ARITM termo .

    $default  reduce using rule 41 (op_expressao)


state 107

   38 expressao_logica: op_expressao OP_COMP op_expressao .
   41 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 90

    $default  reduce using rule 38 (expressao_logica)


state 108

   35 expressao: '(' expressao ')' .

    $default  reduce using rule 35 (expressao)


state 109

   25 cod_block: RETORNO '(' expressao ')' ';' .

    $default  reduce using rule 25 (cod_block)


state 110

   28 cod_block: ID '(' expressao ')' ';' .

    $default  reduce using rule 28 (cod_block)


state 111

   33 assign: ID '[' INT ']' OP_ASSIGN . expressao

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    '('    shift, and go to state 69

    expressao     go to state 117
    op_expressao  go to state 71
    termo         go to state 68


state 112

   47 print: PRINT '(' termo ')' ';' .

    $default  reduce using rule 47 (print)


state 113

   48 print: PRINT '(' palavra ')' ';' .

    $default  reduce using rule 48 (print)


state 114

   20 cod_block: "if" '(' expressao_logica ')' '{' . cod_blocks '}'
   21          | "if" '(' expressao_logica ')' '{' . cod_blocks '}' "else" '{' cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 118
    cod_block    go to state 36
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 115

   30 cod_block: scan '(' ID ')' ';' .

    $default  reduce using rule 30 (cod_block)


state 116

   22 cod_block: LACOS '(' expressao_logica ')' '{' cod_block . '}'

    '}'  shift, and go to state 119


state 117

   33 assign: ID '[' INT ']' OP_ASSIGN expressao .

    $default  reduce using rule 33 (assign)


state 118

   18 cod_blocks: cod_blocks . cod_block
   20 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks . '}'
   21          | "if" '(' expressao_logica ')' '{' cod_blocks . '}' "else" '{' cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    '}'      shift, and go to state 120
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 58
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 119

   22 cod_block: LACOS '(' expressao_logica ')' '{' cod_block '}' .

    $default  reduce using rule 22 (cod_block)


state 120

   20 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' .
   21          | "if" '(' expressao_logica ')' '{' cod_blocks '}' . "else" '{' cod_blocks '}'

    "else"  shift, and go to state 121

    $default  reduce using rule 20 (cod_block)


state 121

   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" . '{' cod_blocks '}'

    '{'  shift, and go to state 122


state 122

   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' . cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 123
    cod_block    go to state 36
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 123

   18 cod_blocks: cod_blocks . cod_block
   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks . '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 28
    RETORNO  shift, and go to state 29
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 30
    PRINT    shift, and go to state 31
    SCAN     shift, and go to state 32
    '}'      shift, and go to state 124
    "if"     shift, and go to state 33

    declaracoes  go to state 34
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 58
    assign       go to state 37
    scan         go to state 38
    print        go to state 39


state 124

   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}' .

    $default  reduce using rule 21 (cod_block)
