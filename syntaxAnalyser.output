Terminals which are not used

   BOOL
   CONDICOES
   SEPARADOR


State 35 conflicts: 2 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: declaracoes

    2 declaracoes: declaracoes declaracao
    3            | declaracao

    4 declaracao: var_decl
    5           | TUPLE declaracao_tupla
    6           | func_decl

    7 declaracao_tupla: TIPO ',' declaracao_tupla
    8                 | var_decl

    9 var_decl: TIPO ID ';'

   10 func_decl: TIPO ID '(' parm_tipos ')' ';'
   11          | TIPO ID '(' ')' ';'
   12          | TIPO ID '(' parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO ID '(' ')' '{' cod_blocks '}'

   14 parm_tipos: parm_tipos TIPO ID
   15           | parm_tipos TIPO ID '[' ']'
   16           | TIPO ID ','
   17           | TIPO ID
   18           | TIPO ID '[' ']'

   19 cod_blocks: cod_blocks cod_block
   20           | cod_block

   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}'
   22          | "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'
   23          | LACOS '(' expressao_logica ')' '{' cod_block '}'
   24          | RETORNO ';'
   25          | RETORNO termo ';'
   26          | RETORNO '(' expressao ')' ';'
   27          | assign ';'
   28          | print
   29          | ID '(' expressao ')' ';'
   30          | ID '(' ')' ';'
   31          | scan '(' ID ')' ';'
   32          | declaracoes

   33 assign: ID OP_ASSIGN expressao
   34       | ID '[' INT ']' OP_ASSIGN expressao

   35 expressao: op_expressao
   36          | '(' expressao ')'

   37 expressao_logica: OP_LOG op_expressao
   38                 | '!' op_expressao
   39                 | op_expressao OP_COMP op_expressao
   40                 | '(' op_expressao ')'
   41                 | op_expressao

   42 op_expressao: op_expressao OP_ARITM termo
   43             | termo

   44 termo: ID
   45      | INT
   46      | FLOAT

   47 scan: SCAN '(' ID ')'

   48 print: PRINT '(' termo ')' ';'
   49      | PRINT '(' palavra ')' ';'

   50 palavra: palavra LETRA
   51        | palavra DIGITO
   52        | LETRA
   53        | DIGITO


Terminals, with rules where they appear

$end (0) 0
'!' (33) 38
'(' (40) 10 11 12 13 21 22 23 26 29 30 31 36 40 47 48 49
')' (41) 10 11 12 13 21 22 23 26 29 30 31 36 40 47 48 49
',' (44) 7 16
';' (59) 9 10 11 24 25 26 27 29 30 31 48 49
'[' (91) 15 18 34
']' (93) 15 18 34
'{' (123) 12 13 21 22 23
'}' (125) 12 13 21 22 23
error (256)
OP_ARITM (258) 42
OP_COMP (259) 39
OP_LOG (260) 37
OP_ASSIGN (261) 33 34
BOOL (262)
TIPO (263) 7 9 10 11 12 13 14 15 16 17 18
CONDICOES (264)
LACOS (265) 23
RETORNO (266) 24 25 26
INT (267) 34 45
FLOAT (268) 46
TUPLE (269) 5
ID (270) 9 10 11 12 13 14 15 16 17 18 29 30 31 33 34 44 47
DIGITO (271) 51 53
LETRA (272) 50 52
SEPARADOR (273)
PRINT (274) 48 49
SCAN (275) 47
"if" (276) 21 22
"else" (277) 22


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
programa (33)
    on left: 1, on right: 0
declaracoes (34)
    on left: 2 3, on right: 1 2 32
declaracao (35)
    on left: 4 5 6, on right: 2 3
declaracao_tupla (36)
    on left: 7 8, on right: 5 7
var_decl (37)
    on left: 9, on right: 4 8
func_decl (38)
    on left: 10 11 12 13, on right: 6
parm_tipos (39)
    on left: 14 15 16 17 18, on right: 10 12 14 15
cod_blocks (40)
    on left: 19 20, on right: 12 13 19 21 22
cod_block (41)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32, on right: 19 20 23
assign (42)
    on left: 33 34, on right: 27
expressao (43)
    on left: 35 36, on right: 26 29 33 34 36
expressao_logica (44)
    on left: 37 38 39 40 41, on right: 21 22 23
op_expressao (45)
    on left: 42 43, on right: 35 37 38 39 40 41 42
termo (46)
    on left: 44 45 46, on right: 25 42 43 48
scan (47)
    on left: 47, on right: 31
print (48)
    on left: 48 49, on right: 28
palavra (49)
    on left: 50 51 52 53, on right: 49 50 51


state 0

    0 $accept: . programa $end

    TIPO   shift, and go to state 1
    TUPLE  shift, and go to state 2

    programa     go to state 3
    declaracoes  go to state 4
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7


state 1

    9 var_decl: TIPO . ID ';'
   10 func_decl: TIPO . ID '(' parm_tipos ')' ';'
   11          | TIPO . ID '(' ')' ';'
   12          | TIPO . ID '(' parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO . ID '(' ')' '{' cod_blocks '}'

    ID  shift, and go to state 8


state 2

    5 declaracao: TUPLE . declaracao_tupla

    TIPO  shift, and go to state 9

    declaracao_tupla  go to state 10
    var_decl          go to state 11


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 12


state 4

    1 programa: declaracoes .
    2 declaracoes: declaracoes . declaracao

    TIPO   shift, and go to state 1
    TUPLE  shift, and go to state 2

    $default  reduce using rule 1 (programa)

    declaracao  go to state 13
    var_decl    go to state 6
    func_decl   go to state 7


state 5

    3 declaracoes: declaracao .

    $default  reduce using rule 3 (declaracoes)


state 6

    4 declaracao: var_decl .

    $default  reduce using rule 4 (declaracao)


state 7

    6 declaracao: func_decl .

    $default  reduce using rule 6 (declaracao)


state 8

    9 var_decl: TIPO ID . ';'
   10 func_decl: TIPO ID . '(' parm_tipos ')' ';'
   11          | TIPO ID . '(' ')' ';'
   12          | TIPO ID . '(' parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO ID . '(' ')' '{' cod_blocks '}'

    ';'  shift, and go to state 14
    '('  shift, and go to state 15


state 9

    7 declaracao_tupla: TIPO . ',' declaracao_tupla
    9 var_decl: TIPO . ID ';'

    ID   shift, and go to state 16
    ','  shift, and go to state 17


state 10

    5 declaracao: TUPLE declaracao_tupla .

    $default  reduce using rule 5 (declaracao)


state 11

    8 declaracao_tupla: var_decl .

    $default  reduce using rule 8 (declaracao_tupla)


state 12

    0 $accept: programa $end .

    $default  accept


state 13

    2 declaracoes: declaracoes declaracao .

    $default  reduce using rule 2 (declaracoes)


state 14

    9 var_decl: TIPO ID ';' .

    $default  reduce using rule 9 (var_decl)


state 15

   10 func_decl: TIPO ID '(' . parm_tipos ')' ';'
   11          | TIPO ID '(' . ')' ';'
   12          | TIPO ID '(' . parm_tipos ')' '{' cod_blocks '}'
   13          | TIPO ID '(' . ')' '{' cod_blocks '}'

    TIPO  shift, and go to state 18
    ')'   shift, and go to state 19

    parm_tipos  go to state 20


state 16

    9 var_decl: TIPO ID . ';'

    ';'  shift, and go to state 14


state 17

    7 declaracao_tupla: TIPO ',' . declaracao_tupla

    TIPO  shift, and go to state 9

    declaracao_tupla  go to state 21
    var_decl          go to state 11


state 18

   16 parm_tipos: TIPO . ID ','
   17           | TIPO . ID
   18           | TIPO . ID '[' ']'

    ID  shift, and go to state 22


state 19

   11 func_decl: TIPO ID '(' ')' . ';'
   13          | TIPO ID '(' ')' . '{' cod_blocks '}'

    ';'  shift, and go to state 23
    '{'  shift, and go to state 24


state 20

   10 func_decl: TIPO ID '(' parm_tipos . ')' ';'
   12          | TIPO ID '(' parm_tipos . ')' '{' cod_blocks '}'
   14 parm_tipos: parm_tipos . TIPO ID
   15           | parm_tipos . TIPO ID '[' ']'

    TIPO  shift, and go to state 25
    ')'   shift, and go to state 26


state 21

    7 declaracao_tupla: TIPO ',' declaracao_tupla .

    $default  reduce using rule 7 (declaracao_tupla)


state 22

   16 parm_tipos: TIPO ID . ','
   17           | TIPO ID .
   18           | TIPO ID . '[' ']'

    ','  shift, and go to state 27
    '['  shift, and go to state 28

    $default  reduce using rule 17 (parm_tipos)


state 23

   11 func_decl: TIPO ID '(' ')' ';' .

    $default  reduce using rule 11 (func_decl)


state 24

   13 func_decl: TIPO ID '(' ')' '{' . cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 36
    cod_block    go to state 37
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 25

   14 parm_tipos: parm_tipos TIPO . ID
   15           | parm_tipos TIPO . ID '[' ']'

    ID  shift, and go to state 41


state 26

   10 func_decl: TIPO ID '(' parm_tipos ')' . ';'
   12          | TIPO ID '(' parm_tipos ')' . '{' cod_blocks '}'

    ';'  shift, and go to state 42
    '{'  shift, and go to state 43


state 27

   16 parm_tipos: TIPO ID ',' .

    $default  reduce using rule 16 (parm_tipos)


state 28

   18 parm_tipos: TIPO ID '[' . ']'

    ']'  shift, and go to state 44


state 29

   23 cod_block: LACOS . '(' expressao_logica ')' '{' cod_block '}'

    '('  shift, and go to state 45


state 30

   24 cod_block: RETORNO . ';'
   25          | RETORNO . termo ';'
   26          | RETORNO . '(' expressao ')' ';'

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48
    ';'    shift, and go to state 49
    '('    shift, and go to state 50

    termo  go to state 51


state 31

   29 cod_block: ID . '(' expressao ')' ';'
   30          | ID . '(' ')' ';'
   33 assign: ID . OP_ASSIGN expressao
   34       | ID . '[' INT ']' OP_ASSIGN expressao

    OP_ASSIGN  shift, and go to state 52
    '('        shift, and go to state 53
    '['        shift, and go to state 54


state 32

   48 print: PRINT . '(' termo ')' ';'
   49      | PRINT . '(' palavra ')' ';'

    '('  shift, and go to state 55


state 33

   47 scan: SCAN . '(' ID ')'

    '('  shift, and go to state 56


state 34

   21 cod_block: "if" . '(' expressao_logica ')' '{' cod_blocks '}'
   22          | "if" . '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'

    '('  shift, and go to state 57


state 35

    2 declaracoes: declaracoes . declaracao
   32 cod_block: declaracoes .

    TIPO   shift, and go to state 1
    TUPLE  shift, and go to state 2

    TIPO      [reduce using rule 32 (cod_block)]
    TUPLE     [reduce using rule 32 (cod_block)]
    $default  reduce using rule 32 (cod_block)

    declaracao  go to state 13
    var_decl    go to state 6
    func_decl   go to state 7


state 36

   13 func_decl: TIPO ID '(' ')' '{' cod_blocks . '}'
   19 cod_blocks: cod_blocks . cod_block

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    '}'      shift, and go to state 58
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 59
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 37

   20 cod_blocks: cod_block .

    $default  reduce using rule 20 (cod_blocks)


state 38

   27 cod_block: assign . ';'

    ';'  shift, and go to state 60


state 39

   31 cod_block: scan . '(' ID ')' ';'

    '('  shift, and go to state 61


state 40

   28 cod_block: print .

    $default  reduce using rule 28 (cod_block)


state 41

   14 parm_tipos: parm_tipos TIPO ID .
   15           | parm_tipos TIPO ID . '[' ']'

    '['  shift, and go to state 62

    $default  reduce using rule 14 (parm_tipos)


state 42

   10 func_decl: TIPO ID '(' parm_tipos ')' ';' .

    $default  reduce using rule 10 (func_decl)


state 43

   12 func_decl: TIPO ID '(' parm_tipos ')' '{' . cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 63
    cod_block    go to state 37
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 44

   18 parm_tipos: TIPO ID '[' ']' .

    $default  reduce using rule 18 (parm_tipos)


state 45

   23 cod_block: LACOS '(' . expressao_logica ')' '{' cod_block '}'

    OP_LOG  shift, and go to state 64
    INT     shift, and go to state 46
    FLOAT   shift, and go to state 47
    ID      shift, and go to state 48
    '('     shift, and go to state 65
    '!'     shift, and go to state 66

    expressao_logica  go to state 67
    op_expressao      go to state 68
    termo             go to state 69


state 46

   45 termo: INT .

    $default  reduce using rule 45 (termo)


state 47

   46 termo: FLOAT .

    $default  reduce using rule 46 (termo)


state 48

   44 termo: ID .

    $default  reduce using rule 44 (termo)


state 49

   24 cod_block: RETORNO ';' .

    $default  reduce using rule 24 (cod_block)


state 50

   26 cod_block: RETORNO '(' . expressao ')' ';'

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 70

    expressao     go to state 71
    op_expressao  go to state 72
    termo         go to state 69


state 51

   25 cod_block: RETORNO termo . ';'

    ';'  shift, and go to state 73


state 52

   33 assign: ID OP_ASSIGN . expressao

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 70

    expressao     go to state 74
    op_expressao  go to state 72
    termo         go to state 69


state 53

   29 cod_block: ID '(' . expressao ')' ';'
   30          | ID '(' . ')' ';'

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 70
    ')'    shift, and go to state 75

    expressao     go to state 76
    op_expressao  go to state 72
    termo         go to state 69


state 54

   34 assign: ID '[' . INT ']' OP_ASSIGN expressao

    INT  shift, and go to state 77


state 55

   48 print: PRINT '(' . termo ')' ';'
   49      | PRINT '(' . palavra ')' ';'

    INT     shift, and go to state 46
    FLOAT   shift, and go to state 47
    ID      shift, and go to state 48
    DIGITO  shift, and go to state 78
    LETRA   shift, and go to state 79

    termo    go to state 80
    palavra  go to state 81


state 56

   47 scan: SCAN '(' . ID ')'

    ID  shift, and go to state 82


state 57

   21 cod_block: "if" '(' . expressao_logica ')' '{' cod_blocks '}'
   22          | "if" '(' . expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'

    OP_LOG  shift, and go to state 64
    INT     shift, and go to state 46
    FLOAT   shift, and go to state 47
    ID      shift, and go to state 48
    '('     shift, and go to state 65
    '!'     shift, and go to state 66

    expressao_logica  go to state 83
    op_expressao      go to state 68
    termo             go to state 69


state 58

   13 func_decl: TIPO ID '(' ')' '{' cod_blocks '}' .

    $default  reduce using rule 13 (func_decl)


state 59

   19 cod_blocks: cod_blocks cod_block .

    $default  reduce using rule 19 (cod_blocks)


state 60

   27 cod_block: assign ';' .

    $default  reduce using rule 27 (cod_block)


state 61

   31 cod_block: scan '(' . ID ')' ';'

    ID  shift, and go to state 84


state 62

   15 parm_tipos: parm_tipos TIPO ID '[' . ']'

    ']'  shift, and go to state 85


state 63

   12 func_decl: TIPO ID '(' parm_tipos ')' '{' cod_blocks . '}'
   19 cod_blocks: cod_blocks . cod_block

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    '}'      shift, and go to state 86
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 59
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 64

   37 expressao_logica: OP_LOG . op_expressao

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48

    op_expressao  go to state 87
    termo         go to state 69


state 65

   40 expressao_logica: '(' . op_expressao ')'

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48

    op_expressao  go to state 88
    termo         go to state 69


state 66

   38 expressao_logica: '!' . op_expressao

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48

    op_expressao  go to state 89
    termo         go to state 69


state 67

   23 cod_block: LACOS '(' expressao_logica . ')' '{' cod_block '}'

    ')'  shift, and go to state 90


state 68

   39 expressao_logica: op_expressao . OP_COMP op_expressao
   41                 | op_expressao .
   42 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 91
    OP_COMP   shift, and go to state 92

    $default  reduce using rule 41 (expressao_logica)


state 69

   43 op_expressao: termo .

    $default  reduce using rule 43 (op_expressao)


state 70

   36 expressao: '(' . expressao ')'

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 70

    expressao     go to state 93
    op_expressao  go to state 72
    termo         go to state 69


state 71

   26 cod_block: RETORNO '(' expressao . ')' ';'

    ')'  shift, and go to state 94


state 72

   35 expressao: op_expressao .
   42 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 91

    $default  reduce using rule 35 (expressao)


state 73

   25 cod_block: RETORNO termo ';' .

    $default  reduce using rule 25 (cod_block)


state 74

   33 assign: ID OP_ASSIGN expressao .

    $default  reduce using rule 33 (assign)


state 75

   30 cod_block: ID '(' ')' . ';'

    ';'  shift, and go to state 95


state 76

   29 cod_block: ID '(' expressao . ')' ';'

    ')'  shift, and go to state 96


state 77

   34 assign: ID '[' INT . ']' OP_ASSIGN expressao

    ']'  shift, and go to state 97


state 78

   53 palavra: DIGITO .

    $default  reduce using rule 53 (palavra)


state 79

   52 palavra: LETRA .

    $default  reduce using rule 52 (palavra)


state 80

   48 print: PRINT '(' termo . ')' ';'

    ')'  shift, and go to state 98


state 81

   49 print: PRINT '(' palavra . ')' ';'
   50 palavra: palavra . LETRA
   51        | palavra . DIGITO

    DIGITO  shift, and go to state 99
    LETRA   shift, and go to state 100
    ')'     shift, and go to state 101


state 82

   47 scan: SCAN '(' ID . ')'

    ')'  shift, and go to state 102


state 83

   21 cod_block: "if" '(' expressao_logica . ')' '{' cod_blocks '}'
   22          | "if" '(' expressao_logica . ')' '{' cod_blocks '}' "else" '{' cod_blocks '}'

    ')'  shift, and go to state 103


state 84

   31 cod_block: scan '(' ID . ')' ';'

    ')'  shift, and go to state 104


state 85

   15 parm_tipos: parm_tipos TIPO ID '[' ']' .

    $default  reduce using rule 15 (parm_tipos)


state 86

   12 func_decl: TIPO ID '(' parm_tipos ')' '{' cod_blocks '}' .

    $default  reduce using rule 12 (func_decl)


state 87

   37 expressao_logica: OP_LOG op_expressao .
   42 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 91

    $default  reduce using rule 37 (expressao_logica)


state 88

   40 expressao_logica: '(' op_expressao . ')'
   42 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 91
    ')'       shift, and go to state 105


state 89

   38 expressao_logica: '!' op_expressao .
   42 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 91

    $default  reduce using rule 38 (expressao_logica)


state 90

   23 cod_block: LACOS '(' expressao_logica ')' . '{' cod_block '}'

    '{'  shift, and go to state 106


state 91

   42 op_expressao: op_expressao OP_ARITM . termo

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48

    termo  go to state 107


state 92

   39 expressao_logica: op_expressao OP_COMP . op_expressao

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48

    op_expressao  go to state 108
    termo         go to state 69


state 93

   36 expressao: '(' expressao . ')'

    ')'  shift, and go to state 109


state 94

   26 cod_block: RETORNO '(' expressao ')' . ';'

    ';'  shift, and go to state 110


state 95

   30 cod_block: ID '(' ')' ';' .

    $default  reduce using rule 30 (cod_block)


state 96

   29 cod_block: ID '(' expressao ')' . ';'

    ';'  shift, and go to state 111


state 97

   34 assign: ID '[' INT ']' . OP_ASSIGN expressao

    OP_ASSIGN  shift, and go to state 112


state 98

   48 print: PRINT '(' termo ')' . ';'

    ';'  shift, and go to state 113


state 99

   51 palavra: palavra DIGITO .

    $default  reduce using rule 51 (palavra)


state 100

   50 palavra: palavra LETRA .

    $default  reduce using rule 50 (palavra)


state 101

   49 print: PRINT '(' palavra ')' . ';'

    ';'  shift, and go to state 114


state 102

   47 scan: SCAN '(' ID ')' .

    $default  reduce using rule 47 (scan)


state 103

   21 cod_block: "if" '(' expressao_logica ')' . '{' cod_blocks '}'
   22          | "if" '(' expressao_logica ')' . '{' cod_blocks '}' "else" '{' cod_blocks '}'

    '{'  shift, and go to state 115


state 104

   31 cod_block: scan '(' ID ')' . ';'

    ';'  shift, and go to state 116


state 105

   40 expressao_logica: '(' op_expressao ')' .

    $default  reduce using rule 40 (expressao_logica)


state 106

   23 cod_block: LACOS '(' expressao_logica ')' '{' . cod_block '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 117
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 107

   42 op_expressao: op_expressao OP_ARITM termo .

    $default  reduce using rule 42 (op_expressao)


state 108

   39 expressao_logica: op_expressao OP_COMP op_expressao .
   42 op_expressao: op_expressao . OP_ARITM termo

    OP_ARITM  shift, and go to state 91

    $default  reduce using rule 39 (expressao_logica)


state 109

   36 expressao: '(' expressao ')' .

    $default  reduce using rule 36 (expressao)


state 110

   26 cod_block: RETORNO '(' expressao ')' ';' .

    $default  reduce using rule 26 (cod_block)


state 111

   29 cod_block: ID '(' expressao ')' ';' .

    $default  reduce using rule 29 (cod_block)


state 112

   34 assign: ID '[' INT ']' OP_ASSIGN . expressao

    INT    shift, and go to state 46
    FLOAT  shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 70

    expressao     go to state 118
    op_expressao  go to state 72
    termo         go to state 69


state 113

   48 print: PRINT '(' termo ')' ';' .

    $default  reduce using rule 48 (print)


state 114

   49 print: PRINT '(' palavra ')' ';' .

    $default  reduce using rule 49 (print)


state 115

   21 cod_block: "if" '(' expressao_logica ')' '{' . cod_blocks '}'
   22          | "if" '(' expressao_logica ')' '{' . cod_blocks '}' "else" '{' cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 119
    cod_block    go to state 37
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 116

   31 cod_block: scan '(' ID ')' ';' .

    $default  reduce using rule 31 (cod_block)


state 117

   23 cod_block: LACOS '(' expressao_logica ')' '{' cod_block . '}'

    '}'  shift, and go to state 120


state 118

   34 assign: ID '[' INT ']' OP_ASSIGN expressao .

    $default  reduce using rule 34 (assign)


state 119

   19 cod_blocks: cod_blocks . cod_block
   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks . '}'
   22          | "if" '(' expressao_logica ')' '{' cod_blocks . '}' "else" '{' cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    '}'      shift, and go to state 121
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 59
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 120

   23 cod_block: LACOS '(' expressao_logica ')' '{' cod_block '}' .

    $default  reduce using rule 23 (cod_block)


state 121

   21 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' .
   22          | "if" '(' expressao_logica ')' '{' cod_blocks '}' . "else" '{' cod_blocks '}'

    "else"  shift, and go to state 122

    $default  reduce using rule 21 (cod_block)


state 122

   22 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" . '{' cod_blocks '}'

    '{'  shift, and go to state 123


state 123

   22 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' . cod_blocks '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_blocks   go to state 124
    cod_block    go to state 37
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 124

   19 cod_blocks: cod_blocks . cod_block
   22 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks . '}'

    TIPO     shift, and go to state 1
    LACOS    shift, and go to state 29
    RETORNO  shift, and go to state 30
    TUPLE    shift, and go to state 2
    ID       shift, and go to state 31
    PRINT    shift, and go to state 32
    SCAN     shift, and go to state 33
    '}'      shift, and go to state 125
    "if"     shift, and go to state 34

    declaracoes  go to state 35
    declaracao   go to state 5
    var_decl     go to state 6
    func_decl    go to state 7
    cod_block    go to state 59
    assign       go to state 38
    scan         go to state 39
    print        go to state 40


state 125

   22 cod_block: "if" '(' expressao_logica ')' '{' cod_blocks '}' "else" '{' cod_blocks '}' .

    $default  reduce using rule 22 (cod_block)
