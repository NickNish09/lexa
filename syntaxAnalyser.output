Terminais sem uso na gramática

    BOOL
    SEPARADOR


Estado 36 conflitos: 2 de deslocamento/redução
Estado 85 conflitos: 1 de deslocamento/redução
Estado 112 conflitos: 1 de redução/redução


Gramática

    0 $accept: programa $end

    1 programa: declaracoes

    2 declaracoes: declaracoes declaracao
    3            | declaracao

    4 declaracao: var_decl
    5           | TUPLE declaracao_tupla
    6           | func_decl

    7 declaracao_tupla: TIPO ',' declaracao_tupla
    8                 | var_decl

    9 var_decl: TIPO ID ';'

   10 $@1: %empty

   11 $@2: %empty

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'

   13 $@3: %empty

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' ';'

   15 parm_tipos: parm_tipos TIPO ID
   16           | parm_tipos TIPO ID '[' ']'
   17           | TIPO ID ','
   18           | TIPO ID
   19           | TIPO ID '[' ']'
   20           | TUPLE ID

   21 cod_blocks: cod_blocks cod_block
   22           | cod_block

   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}'
   24          | IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'
   25          | LACOS '(' expressao_logica ')' '{' cod_block '}'
   26          | RETORNO ';'
   27          | RETORNO termo ';'
   28          | RETORNO '(' expressao ')' ';'
   29          | assign ';'
   30          | print
   31          | variable '(' expressao ')' ';'
   32          | variable '(' ')' ';'
   33          | scan '(' variable ')' ';'
   34          | declaracoes

   35 assign: variable OP_ASSIGN expressao
   36       | variable '[' INT ']' OP_ASSIGN expressao
   37       | variable OP_ASSIGN tuple_expressao

   38 expressao: op_expressao
   39          | '(' expressao ')'

   40 tuple_expressao: '(' tuple_args ')'

   41 tuple_args: tuple_args ',' termo
   42           | termo

   43 expressao_logica: OP_LOG op_expressao
   44                 | '!' op_expressao
   45                 | op_expressao OP_COMP op_expressao
   46                 | '(' op_expressao ')'
   47                 | op_expressao

   48 op_expressao: op_expressao OP_ARITM termo
   49             | termo

   50 termo: variable
   51      | INT
   52      | FLOAT
   53      | variable '[' INT ']'
   54      | palavra

   55 scan: SCAN '(' variable ')'

   56 print: PRINT '(' termo ')' ';'
   57      | PRINT '(' palavra ')' ';'

   58 palavra: palavra LETRA
   59        | palavra DIGITO
   60        | LETRA
   61        | DIGITO

   62 variable: ID


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '!' (33) 44
    '(' (40) 12 14 23 24 25 28 31 32 33 39 40 46 55 56 57
    ')' (41) 12 14 23 24 25 28 31 32 33 39 40 46 55 56 57
    ',' (44) 7 17 41
    ';' (59) 9 12 14 26 27 28 29 31 32 33 56 57
    '[' (91) 16 19 36 53
    ']' (93) 16 19 36 53
    '{' (123) 12 14 23 24 25
    '}' (125) 12 14 23 24 25
    error (256)
    BOOL (258)
    TIPO <tipo> (259) 7 9 12 14 15 16 17 18 19
    IF <str> (260) 23 24
    ELSE <str> (261) 24
    LACOS (262) 25
    RETORNO <str> (263) 26 27 28
    INT <str> (264) 36 51 53
    FLOAT <str> (265) 52
    TUPLE <str> (266) 5 20
    ID <id> (267) 9 12 14 15 16 17 18 19 20 62
    DIGITO <str> (268) 59 61
    LETRA <str> (269) 58 60
    SEPARADOR (270)
    PRINT (271) 56 57
    SCAN (272) 55
    OP_ASSIGN <operador> (273) 35 36 37
    OP_ARITM <operador> (274) 48
    OP_LOG <operador> (275) 43
    OP_COMP <operador> (276) 45


Não terminais com as regras onde eles aparecem

    $accept (31)
        à esquerda: 0
    programa <nd> (32)
        à esquerda: 1
        à direita: 0
    declaracoes <nd> (33)
        à esquerda: 2 3
        à direita: 1 2 34
    declaracao <nd> (34)
        à esquerda: 4 5 6
        à direita: 2 3
    declaracao_tupla <nd> (35)
        à esquerda: 7 8
        à direita: 5 7
    var_decl <nd> (36)
        à esquerda: 9
        à direita: 4 8
    func_decl <nd> (37)
        à esquerda: 12 14
        à direita: 6
    $@1 (38)
        à esquerda: 10
        à direita: 12
    $@2 (39)
        à esquerda: 11
        à direita: 12
    $@3 (40)
        à esquerda: 13
        à direita: 14
    parm_tipos <nd> (41)
        à esquerda: 15 16 17 18 19 20
        à direita: 12 15 16
    cod_blocks <nd> (42)
        à esquerda: 21 22
        à direita: 12 14 21 23 24
    cod_block <nd> (43)
        à esquerda: 23 24 25 26 27 28 29 30 31 32 33 34
        à direita: 21 22 25
    assign <nd> (44)
        à esquerda: 35 36 37
        à direita: 29
    expressao <nd> (45)
        à esquerda: 38 39
        à direita: 28 31 35 36 39
    tuple_expressao <nd> (46)
        à esquerda: 40
        à direita: 37
    tuple_args <nd> (47)
        à esquerda: 41 42
        à direita: 40 41
    expressao_logica <nd> (48)
        à esquerda: 43 44 45 46 47
        à direita: 23 24 25
    op_expressao <nd> (49)
        à esquerda: 48 49
        à direita: 38 43 44 45 46 47 48
    termo <nd> (50)
        à esquerda: 50 51 52 53 54
        à direita: 27 41 42 48 49 56
    scan <nd> (51)
        à esquerda: 55
        à direita: 33
    print <nd> (52)
        à esquerda: 56 57
        à direita: 30
    palavra <str> (53)
        à esquerda: 58 59 60 61
        à direita: 54 57 58 59
    variable <str> (54)
        à esquerda: 62
        à direita: 31 32 33 35 36 37 50 53 55


Estado 0

    0 $accept: • programa $end

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    programa     ir ao estado 3
    declaracoes  ir ao estado 4
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7


Estado 1

    9 var_decl: TIPO • ID ';'
   12 func_decl: TIPO • ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'
   14          | TIPO • ID '(' ')' '{' $@3 cod_blocks '}' ';'

    ID  deslocar, e ir ao estado 8


Estado 2

    5 declaracao: TUPLE • declaracao_tupla

    TIPO  deslocar, e ir ao estado 9

    declaracao_tupla  ir ao estado 10
    var_decl          ir ao estado 11


Estado 3

    0 $accept: programa • $end

    $end  deslocar, e ir ao estado 12


Estado 4

    1 programa: declaracoes •
    2 declaracoes: declaracoes • declaracao

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 1 (programa)

    declaracao  ir ao estado 13
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7


Estado 5

    3 declaracoes: declaracao •

    $padrão  reduzir usando a regra 3 (declaracoes)


Estado 6

    4 declaracao: var_decl •

    $padrão  reduzir usando a regra 4 (declaracao)


Estado 7

    6 declaracao: func_decl •

    $padrão  reduzir usando a regra 6 (declaracao)


Estado 8

    9 var_decl: TIPO ID • ';'
   12 func_decl: TIPO ID • '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'
   14          | TIPO ID • '(' ')' '{' $@3 cod_blocks '}' ';'

    ';'  deslocar, e ir ao estado 14
    '('  deslocar, e ir ao estado 15


Estado 9

    7 declaracao_tupla: TIPO • ',' declaracao_tupla
    9 var_decl: TIPO • ID ';'

    ID   deslocar, e ir ao estado 16
    ','  deslocar, e ir ao estado 17


Estado 10

    5 declaracao: TUPLE declaracao_tupla •

    $padrão  reduzir usando a regra 5 (declaracao)


Estado 11

    8 declaracao_tupla: var_decl •

    $padrão  reduzir usando a regra 8 (declaracao_tupla)


Estado 12

    0 $accept: programa $end •

    $padrão  aceitar


Estado 13

    2 declaracoes: declaracoes declaracao •

    $padrão  reduzir usando a regra 2 (declaracoes)


Estado 14

    9 var_decl: TIPO ID ';' •

    $padrão  reduzir usando a regra 9 (var_decl)


Estado 15

   12 func_decl: TIPO ID '(' • $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'
   14          | TIPO ID '(' • ')' '{' $@3 cod_blocks '}' ';'

    ')'  deslocar, e ir ao estado 18

    $padrão  reduzir usando a regra 10 ($@1)

    $@1  ir ao estado 19


Estado 16

    9 var_decl: TIPO ID • ';'

    ';'  deslocar, e ir ao estado 14


Estado 17

    7 declaracao_tupla: TIPO ',' • declaracao_tupla

    TIPO  deslocar, e ir ao estado 9

    declaracao_tupla  ir ao estado 20
    var_decl          ir ao estado 11


Estado 18

   14 func_decl: TIPO ID '(' ')' • '{' $@3 cod_blocks '}' ';'

    '{'  deslocar, e ir ao estado 21


Estado 19

   12 func_decl: TIPO ID '(' $@1 • parm_tipos ')' $@2 '{' cod_blocks '}' ';'

    TIPO   deslocar, e ir ao estado 22
    TUPLE  deslocar, e ir ao estado 23

    parm_tipos  ir ao estado 24


Estado 20

    7 declaracao_tupla: TIPO ',' declaracao_tupla •

    $padrão  reduzir usando a regra 7 (declaracao_tupla)


Estado 21

   14 func_decl: TIPO ID '(' ')' '{' • $@3 cod_blocks '}' ';'

    $padrão  reduzir usando a regra 13 ($@3)

    $@3  ir ao estado 25


Estado 22

   17 parm_tipos: TIPO • ID ','
   18           | TIPO • ID
   19           | TIPO • ID '[' ']'

    ID  deslocar, e ir ao estado 26


Estado 23

   20 parm_tipos: TUPLE • ID

    ID  deslocar, e ir ao estado 27


Estado 24

   12 func_decl: TIPO ID '(' $@1 parm_tipos • ')' $@2 '{' cod_blocks '}' ';'
   15 parm_tipos: parm_tipos • TIPO ID
   16           | parm_tipos • TIPO ID '[' ']'

    TIPO  deslocar, e ir ao estado 28
    ')'   deslocar, e ir ao estado 29


Estado 25

   14 func_decl: TIPO ID '(' ')' '{' $@3 • cod_blocks '}' ';'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 37
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 26

   17 parm_tipos: TIPO ID • ','
   18           | TIPO ID •
   19           | TIPO ID • '[' ']'

    ','  deslocar, e ir ao estado 43
    '['  deslocar, e ir ao estado 44

    $padrão  reduzir usando a regra 18 (parm_tipos)


Estado 27

   20 parm_tipos: TUPLE ID •

    $padrão  reduzir usando a regra 20 (parm_tipos)


Estado 28

   15 parm_tipos: parm_tipos TIPO • ID
   16           | parm_tipos TIPO • ID '[' ']'

    ID  deslocar, e ir ao estado 45


Estado 29

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' • $@2 '{' cod_blocks '}' ';'

    $padrão  reduzir usando a regra 11 ($@2)

    $@2  ir ao estado 46


Estado 30

   23 cod_block: IF • '(' expressao_logica ')' '{' cod_blocks '}'
   24          | IF • '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    '('  deslocar, e ir ao estado 47


Estado 31

   25 cod_block: LACOS • '(' expressao_logica ')' '{' cod_block '}'

    '('  deslocar, e ir ao estado 48


Estado 32

   26 cod_block: RETORNO • ';'
   27          | RETORNO • termo ';'
   28          | RETORNO • '(' expressao ')' ';'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    ';'     deslocar, e ir ao estado 53
    '('     deslocar, e ir ao estado 54

    termo     ir ao estado 55
    palavra   ir ao estado 56
    variable  ir ao estado 57


Estado 33

   62 variable: ID •

    $padrão  reduzir usando a regra 62 (variable)


Estado 34

   56 print: PRINT • '(' termo ')' ';'
   57      | PRINT • '(' palavra ')' ';'

    '('  deslocar, e ir ao estado 58


Estado 35

   55 scan: SCAN • '(' variable ')'

    '('  deslocar, e ir ao estado 59


Estado 36

    2 declaracoes: declaracoes • declaracao
   34 cod_block: declaracoes •

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    TIPO     [reduzir usando a regra 34 (cod_block)]
    TUPLE    [reduzir usando a regra 34 (cod_block)]
    $padrão  reduzir usando a regra 34 (cod_block)

    declaracao  ir ao estado 13
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7


Estado 37

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks • '}' ';'
   21 cod_blocks: cod_blocks • cod_block

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 60

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 61
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 38

   22 cod_blocks: cod_block •

    $padrão  reduzir usando a regra 22 (cod_blocks)


Estado 39

   29 cod_block: assign • ';'

    ';'  deslocar, e ir ao estado 62


Estado 40

   33 cod_block: scan • '(' variable ')' ';'

    '('  deslocar, e ir ao estado 63


Estado 41

   30 cod_block: print •

    $padrão  reduzir usando a regra 30 (cod_block)


Estado 42

   31 cod_block: variable • '(' expressao ')' ';'
   32          | variable • '(' ')' ';'
   35 assign: variable • OP_ASSIGN expressao
   36       | variable • '[' INT ']' OP_ASSIGN expressao
   37       | variable • OP_ASSIGN tuple_expressao

    OP_ASSIGN  deslocar, e ir ao estado 64
    '('        deslocar, e ir ao estado 65
    '['        deslocar, e ir ao estado 66


Estado 43

   17 parm_tipos: TIPO ID ',' •

    $padrão  reduzir usando a regra 17 (parm_tipos)


Estado 44

   19 parm_tipos: TIPO ID '[' • ']'

    ']'  deslocar, e ir ao estado 67


Estado 45

   15 parm_tipos: parm_tipos TIPO ID •
   16           | parm_tipos TIPO ID • '[' ']'

    '['  deslocar, e ir ao estado 68

    $padrão  reduzir usando a regra 15 (parm_tipos)


Estado 46

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 • '{' cod_blocks '}' ';'

    '{'  deslocar, e ir ao estado 69


Estado 47

   23 cod_block: IF '(' • expressao_logica ')' '{' cod_blocks '}'
   24          | IF '(' • expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    OP_LOG  deslocar, e ir ao estado 70
    '('     deslocar, e ir ao estado 71
    '!'     deslocar, e ir ao estado 72

    expressao_logica  ir ao estado 73
    op_expressao      ir ao estado 74
    termo             ir ao estado 75
    palavra           ir ao estado 56
    variable          ir ao estado 57


Estado 48

   25 cod_block: LACOS '(' • expressao_logica ')' '{' cod_block '}'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    OP_LOG  deslocar, e ir ao estado 70
    '('     deslocar, e ir ao estado 71
    '!'     deslocar, e ir ao estado 72

    expressao_logica  ir ao estado 76
    op_expressao      ir ao estado 74
    termo             ir ao estado 75
    palavra           ir ao estado 56
    variable          ir ao estado 57


Estado 49

   51 termo: INT •

    $padrão  reduzir usando a regra 51 (termo)


Estado 50

   52 termo: FLOAT •

    $padrão  reduzir usando a regra 52 (termo)


Estado 51

   61 palavra: DIGITO •

    $padrão  reduzir usando a regra 61 (palavra)


Estado 52

   60 palavra: LETRA •

    $padrão  reduzir usando a regra 60 (palavra)


Estado 53

   26 cod_block: RETORNO ';' •

    $padrão  reduzir usando a regra 26 (cod_block)


Estado 54

   28 cod_block: RETORNO '(' • expressao ')' ';'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    '('     deslocar, e ir ao estado 77

    expressao     ir ao estado 78
    op_expressao  ir ao estado 79
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 55

   27 cod_block: RETORNO termo • ';'

    ';'  deslocar, e ir ao estado 80


Estado 56

   54 termo: palavra •
   58 palavra: palavra • LETRA
   59        | palavra • DIGITO

    DIGITO  deslocar, e ir ao estado 81
    LETRA   deslocar, e ir ao estado 82

    $padrão  reduzir usando a regra 54 (termo)


Estado 57

   50 termo: variable •
   53      | variable • '[' INT ']'

    '['  deslocar, e ir ao estado 83

    $padrão  reduzir usando a regra 50 (termo)


Estado 58

   56 print: PRINT '(' • termo ')' ';'
   57      | PRINT '(' • palavra ')' ';'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    termo     ir ao estado 84
    palavra   ir ao estado 85
    variable  ir ao estado 57


Estado 59

   55 scan: SCAN '(' • variable ')'

    ID  deslocar, e ir ao estado 33

    variable  ir ao estado 86


Estado 60

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' • ';'

    ';'  deslocar, e ir ao estado 87


Estado 61

   21 cod_blocks: cod_blocks cod_block •

    $padrão  reduzir usando a regra 21 (cod_blocks)


Estado 62

   29 cod_block: assign ';' •

    $padrão  reduzir usando a regra 29 (cod_block)


Estado 63

   33 cod_block: scan '(' • variable ')' ';'

    ID  deslocar, e ir ao estado 33

    variable  ir ao estado 88


Estado 64

   35 assign: variable OP_ASSIGN • expressao
   37       | variable OP_ASSIGN • tuple_expressao

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    '('     deslocar, e ir ao estado 89

    expressao        ir ao estado 90
    tuple_expressao  ir ao estado 91
    op_expressao     ir ao estado 79
    termo            ir ao estado 75
    palavra          ir ao estado 56
    variable         ir ao estado 57


Estado 65

   31 cod_block: variable '(' • expressao ')' ';'
   32          | variable '(' • ')' ';'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    '('     deslocar, e ir ao estado 77
    ')'     deslocar, e ir ao estado 92

    expressao     ir ao estado 93
    op_expressao  ir ao estado 79
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 66

   36 assign: variable '[' • INT ']' OP_ASSIGN expressao

    INT  deslocar, e ir ao estado 94


Estado 67

   19 parm_tipos: TIPO ID '[' ']' •

    $padrão  reduzir usando a regra 19 (parm_tipos)


Estado 68

   16 parm_tipos: parm_tipos TIPO ID '[' • ']'

    ']'  deslocar, e ir ao estado 95


Estado 69

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' • cod_blocks '}' ';'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 96
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 70

   43 expressao_logica: OP_LOG • op_expressao

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    op_expressao  ir ao estado 97
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 71

   46 expressao_logica: '(' • op_expressao ')'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    op_expressao  ir ao estado 98
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 72

   44 expressao_logica: '!' • op_expressao

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    op_expressao  ir ao estado 99
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 73

   23 cod_block: IF '(' expressao_logica • ')' '{' cod_blocks '}'
   24          | IF '(' expressao_logica • ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    ')'  deslocar, e ir ao estado 100


Estado 74

   45 expressao_logica: op_expressao • OP_COMP op_expressao
   47                 | op_expressao •
   48 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 101
    OP_COMP   deslocar, e ir ao estado 102

    $padrão  reduzir usando a regra 47 (expressao_logica)


Estado 75

   49 op_expressao: termo •

    $padrão  reduzir usando a regra 49 (op_expressao)


Estado 76

   25 cod_block: LACOS '(' expressao_logica • ')' '{' cod_block '}'

    ')'  deslocar, e ir ao estado 103


Estado 77

   39 expressao: '(' • expressao ')'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    '('     deslocar, e ir ao estado 77

    expressao     ir ao estado 104
    op_expressao  ir ao estado 79
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 78

   28 cod_block: RETORNO '(' expressao • ')' ';'

    ')'  deslocar, e ir ao estado 105


Estado 79

   38 expressao: op_expressao •
   48 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 101

    $padrão  reduzir usando a regra 38 (expressao)


Estado 80

   27 cod_block: RETORNO termo ';' •

    $padrão  reduzir usando a regra 27 (cod_block)


Estado 81

   59 palavra: palavra DIGITO •

    $padrão  reduzir usando a regra 59 (palavra)


Estado 82

   58 palavra: palavra LETRA •

    $padrão  reduzir usando a regra 58 (palavra)


Estado 83

   53 termo: variable '[' • INT ']'

    INT  deslocar, e ir ao estado 106


Estado 84

   56 print: PRINT '(' termo • ')' ';'

    ')'  deslocar, e ir ao estado 107


Estado 85

   54 termo: palavra •
   57 print: PRINT '(' palavra • ')' ';'
   58 palavra: palavra • LETRA
   59        | palavra • DIGITO

    DIGITO  deslocar, e ir ao estado 81
    LETRA   deslocar, e ir ao estado 82
    ')'     deslocar, e ir ao estado 108

    ')'  [reduzir usando a regra 54 (termo)]


Estado 86

   55 scan: SCAN '(' variable • ')'

    ')'  deslocar, e ir ao estado 109


Estado 87

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' ';' •

    $padrão  reduzir usando a regra 14 (func_decl)


Estado 88

   33 cod_block: scan '(' variable • ')' ';'

    ')'  deslocar, e ir ao estado 110


Estado 89

   39 expressao: '(' • expressao ')'
   40 tuple_expressao: '(' • tuple_args ')'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    '('     deslocar, e ir ao estado 77

    expressao     ir ao estado 104
    tuple_args    ir ao estado 111
    op_expressao  ir ao estado 79
    termo         ir ao estado 112
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 90

   35 assign: variable OP_ASSIGN expressao •

    $padrão  reduzir usando a regra 35 (assign)


Estado 91

   37 assign: variable OP_ASSIGN tuple_expressao •

    $padrão  reduzir usando a regra 37 (assign)


Estado 92

   32 cod_block: variable '(' ')' • ';'

    ';'  deslocar, e ir ao estado 113


Estado 93

   31 cod_block: variable '(' expressao • ')' ';'

    ')'  deslocar, e ir ao estado 114


Estado 94

   36 assign: variable '[' INT • ']' OP_ASSIGN expressao

    ']'  deslocar, e ir ao estado 115


Estado 95

   16 parm_tipos: parm_tipos TIPO ID '[' ']' •

    $padrão  reduzir usando a regra 16 (parm_tipos)


Estado 96

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks • '}' ';'
   21 cod_blocks: cod_blocks • cod_block

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 116

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 61
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 97

   43 expressao_logica: OP_LOG op_expressao •
   48 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 101

    $padrão  reduzir usando a regra 43 (expressao_logica)


Estado 98

   46 expressao_logica: '(' op_expressao • ')'
   48 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 101
    ')'       deslocar, e ir ao estado 117


Estado 99

   44 expressao_logica: '!' op_expressao •
   48 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 101

    $padrão  reduzir usando a regra 44 (expressao_logica)


Estado 100

   23 cod_block: IF '(' expressao_logica ')' • '{' cod_blocks '}'
   24          | IF '(' expressao_logica ')' • '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 118


Estado 101

   48 op_expressao: op_expressao OP_ARITM • termo

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    termo     ir ao estado 119
    palavra   ir ao estado 56
    variable  ir ao estado 57


Estado 102

   45 expressao_logica: op_expressao OP_COMP • op_expressao

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    op_expressao  ir ao estado 120
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 103

   25 cod_block: LACOS '(' expressao_logica ')' • '{' cod_block '}'

    '{'  deslocar, e ir ao estado 121


Estado 104

   39 expressao: '(' expressao • ')'

    ')'  deslocar, e ir ao estado 122


Estado 105

   28 cod_block: RETORNO '(' expressao ')' • ';'

    ';'  deslocar, e ir ao estado 123


Estado 106

   53 termo: variable '[' INT • ']'

    ']'  deslocar, e ir ao estado 124


Estado 107

   56 print: PRINT '(' termo ')' • ';'

    ';'  deslocar, e ir ao estado 125


Estado 108

   57 print: PRINT '(' palavra ')' • ';'

    ';'  deslocar, e ir ao estado 126


Estado 109

   55 scan: SCAN '(' variable ')' •

    $padrão  reduzir usando a regra 55 (scan)


Estado 110

   33 cod_block: scan '(' variable ')' • ';'

    ';'  deslocar, e ir ao estado 127


Estado 111

   40 tuple_expressao: '(' tuple_args • ')'
   41 tuple_args: tuple_args • ',' termo

    ','  deslocar, e ir ao estado 128
    ')'  deslocar, e ir ao estado 129


Estado 112

   42 tuple_args: termo •
   49 op_expressao: termo •

    OP_ARITM  reduzir usando a regra 49 (op_expressao)
    ')'       reduzir usando a regra 42 (tuple_args)
    ')'       [reduzir usando a regra 49 (op_expressao)]
    $padrão   reduzir usando a regra 42 (tuple_args)


Estado 113

   32 cod_block: variable '(' ')' ';' •

    $padrão  reduzir usando a regra 32 (cod_block)


Estado 114

   31 cod_block: variable '(' expressao ')' • ';'

    ';'  deslocar, e ir ao estado 130


Estado 115

   36 assign: variable '[' INT ']' • OP_ASSIGN expressao

    OP_ASSIGN  deslocar, e ir ao estado 131


Estado 116

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' • ';'

    ';'  deslocar, e ir ao estado 132


Estado 117

   46 expressao_logica: '(' op_expressao ')' •

    $padrão  reduzir usando a regra 46 (expressao_logica)


Estado 118

   23 cod_block: IF '(' expressao_logica ')' '{' • cod_blocks '}'
   24          | IF '(' expressao_logica ')' '{' • cod_blocks '}' ELSE '{' cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 133
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 119

   48 op_expressao: op_expressao OP_ARITM termo •

    $padrão  reduzir usando a regra 48 (op_expressao)


Estado 120

   45 expressao_logica: op_expressao OP_COMP op_expressao •
   48 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 101

    $padrão  reduzir usando a regra 45 (expressao_logica)


Estado 121

   25 cod_block: LACOS '(' expressao_logica ')' '{' • cod_block '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 134
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 122

   39 expressao: '(' expressao ')' •

    $padrão  reduzir usando a regra 39 (expressao)


Estado 123

   28 cod_block: RETORNO '(' expressao ')' ';' •

    $padrão  reduzir usando a regra 28 (cod_block)


Estado 124

   53 termo: variable '[' INT ']' •

    $padrão  reduzir usando a regra 53 (termo)


Estado 125

   56 print: PRINT '(' termo ')' ';' •

    $padrão  reduzir usando a regra 56 (print)


Estado 126

   57 print: PRINT '(' palavra ')' ';' •

    $padrão  reduzir usando a regra 57 (print)


Estado 127

   33 cod_block: scan '(' variable ')' ';' •

    $padrão  reduzir usando a regra 33 (cod_block)


Estado 128

   41 tuple_args: tuple_args ',' • termo

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52

    termo     ir ao estado 135
    palavra   ir ao estado 56
    variable  ir ao estado 57


Estado 129

   40 tuple_expressao: '(' tuple_args ')' •

    $padrão  reduzir usando a regra 40 (tuple_expressao)


Estado 130

   31 cod_block: variable '(' expressao ')' ';' •

    $padrão  reduzir usando a regra 31 (cod_block)


Estado 131

   36 assign: variable '[' INT ']' OP_ASSIGN • expressao

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 51
    LETRA   deslocar, e ir ao estado 52
    '('     deslocar, e ir ao estado 77

    expressao     ir ao estado 136
    op_expressao  ir ao estado 79
    termo         ir ao estado 75
    palavra       ir ao estado 56
    variable      ir ao estado 57


Estado 132

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';' •

    $padrão  reduzir usando a regra 12 (func_decl)


Estado 133

   21 cod_blocks: cod_blocks • cod_block
   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks • '}'
   24          | IF '(' expressao_logica ')' '{' cod_blocks • '}' ELSE '{' cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 137

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 61
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 134

   25 cod_block: LACOS '(' expressao_logica ')' '{' cod_block • '}'

    '}'  deslocar, e ir ao estado 138


Estado 135

   41 tuple_args: tuple_args ',' termo •

    $padrão  reduzir usando a regra 41 (tuple_args)


Estado 136

   36 assign: variable '[' INT ']' OP_ASSIGN expressao •

    $padrão  reduzir usando a regra 36 (assign)


Estado 137

   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' •
   24          | IF '(' expressao_logica ')' '{' cod_blocks '}' • ELSE '{' cod_blocks '}'

    ELSE  deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 23 (cod_block)


Estado 138

   25 cod_block: LACOS '(' expressao_logica ')' '{' cod_block '}' •

    $padrão  reduzir usando a regra 25 (cod_block)


Estado 139

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE • '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 140


Estado 140

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' • cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 141
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 141

   21 cod_blocks: cod_blocks • cod_block
   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks • '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 142

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 61
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 142

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}' •

    $padrão  reduzir usando a regra 24 (cod_block)
