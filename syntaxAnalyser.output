Terminais sem uso na gramática

    BOOL
    SEPARADOR


Estado 36 conflitos: 2 de deslocamento/redução


Gramática

    0 $accept: programa $end

    1 programa: declaracoes

    2 declaracoes: declaracoes declaracao
    3            | declaracao

    4 declaracao: var_decl
    5           | TUPLE declaracao_tupla
    6           | func_decl

    7 declaracao_tupla: TIPO ',' declaracao_tupla
    8                 | var_decl

    9 var_decl: TIPO ID ';'

   10 $@1: %empty

   11 $@2: %empty

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'

   13 $@3: %empty

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' ';'

   15 parm_tipos: parm_tipos TIPO ID
   16           | parm_tipos TIPO ID '[' ']'
   17           | TIPO ID ','
   18           | TIPO ID
   19           | TIPO ID '[' ']'
   20           | TUPLE ID

   21 cod_blocks: cod_blocks cod_block
   22           | cod_block

   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}'
   24          | IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'
   25          | LACOS '(' expressao_logica ')' '{' cod_block '}'
   26          | RETORNO ';'
   27          | RETORNO termo ';'
   28          | RETORNO '(' expressao ')' ';'
   29          | assign ';'
   30          | print
   31          | variable '(' expressao ')' ';'
   32          | variable '(' ')' ';'
   33          | scan '(' variable ')' ';'
   34          | declaracoes

   35 assign: variable OP_ASSIGN expressao
   36       | variable '[' INT ']' OP_ASSIGN expressao

   37 expressao: op_expressao
   38          | '(' expressao ')'

   39 expressao_logica: OP_LOG op_expressao
   40                 | '!' op_expressao
   41                 | op_expressao OP_COMP op_expressao
   42                 | '(' op_expressao ')'
   43                 | op_expressao

   44 op_expressao: op_expressao OP_ARITM termo
   45             | termo

   46 termo: variable
   47      | INT
   48      | FLOAT
   49      | variable '[' INT ']'

   50 scan: SCAN '(' variable ')'

   51 print: PRINT '(' termo ')' ';'
   52      | PRINT '(' palavra ')' ';'

   53 palavra: palavra LETRA
   54        | palavra DIGITO
   55        | LETRA
   56        | DIGITO

   57 variable: ID


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '!' (33) 40
    '(' (40) 12 14 23 24 25 28 31 32 33 38 42 50 51 52
    ')' (41) 12 14 23 24 25 28 31 32 33 38 42 50 51 52
    ',' (44) 7 17
    ';' (59) 9 12 14 26 27 28 29 31 32 33 51 52
    '[' (91) 16 19 36 49
    ']' (93) 16 19 36 49
    '{' (123) 12 14 23 24 25
    '}' (125) 12 14 23 24 25
    error (256)
    BOOL (258)
    TIPO <tipo> (259) 7 9 12 14 15 16 17 18 19
    IF <str> (260) 23 24
    ELSE <str> (261) 24
    LACOS (262) 25
    RETORNO <str> (263) 26 27 28
    INT <str> (264) 36 47 49
    FLOAT <str> (265) 48
    TUPLE <str> (266) 5 20
    ID <id> (267) 9 12 14 15 16 17 18 19 20 57
    DIGITO <str> (268) 54 56
    LETRA <str> (269) 53 55
    SEPARADOR (270)
    PRINT (271) 51 52
    SCAN (272) 50
    OP_ASSIGN <operador> (273) 35 36
    OP_ARITM <operador> (274) 44
    OP_LOG <operador> (275) 39
    OP_COMP <operador> (276) 41


Não terminais com as regras onde eles aparecem

    $accept (31)
        à esquerda: 0
    programa <nd> (32)
        à esquerda: 1
        à direita: 0
    declaracoes <nd> (33)
        à esquerda: 2 3
        à direita: 1 2 34
    declaracao <nd> (34)
        à esquerda: 4 5 6
        à direita: 2 3
    declaracao_tupla <nd> (35)
        à esquerda: 7 8
        à direita: 5 7
    var_decl <nd> (36)
        à esquerda: 9
        à direita: 4 8
    func_decl <nd> (37)
        à esquerda: 12 14
        à direita: 6
    $@1 (38)
        à esquerda: 10
        à direita: 12
    $@2 (39)
        à esquerda: 11
        à direita: 12
    $@3 (40)
        à esquerda: 13
        à direita: 14
    parm_tipos <nd> (41)
        à esquerda: 15 16 17 18 19 20
        à direita: 12 15 16
    cod_blocks <nd> (42)
        à esquerda: 21 22
        à direita: 12 14 21 23 24
    cod_block <nd> (43)
        à esquerda: 23 24 25 26 27 28 29 30 31 32 33 34
        à direita: 21 22 25
    assign <nd> (44)
        à esquerda: 35 36
        à direita: 29
    expressao <nd> (45)
        à esquerda: 37 38
        à direita: 28 31 35 36 38
    expressao_logica <nd> (46)
        à esquerda: 39 40 41 42 43
        à direita: 23 24 25
    op_expressao <nd> (47)
        à esquerda: 44 45
        à direita: 37 39 40 41 42 43 44
    termo <nd> (48)
        à esquerda: 46 47 48 49
        à direita: 27 44 45 51
    scan <nd> (49)
        à esquerda: 50
        à direita: 33
    print <nd> (50)
        à esquerda: 51 52
        à direita: 30
    palavra <str> (51)
        à esquerda: 53 54 55 56
        à direita: 52 53 54
    variable <str> (52)
        à esquerda: 57
        à direita: 31 32 33 35 36 46 49 50


Estado 0

    0 $accept: • programa $end

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    programa     ir ao estado 3
    declaracoes  ir ao estado 4
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7


Estado 1

    9 var_decl: TIPO • ID ';'
   12 func_decl: TIPO • ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'
   14          | TIPO • ID '(' ')' '{' $@3 cod_blocks '}' ';'

    ID  deslocar, e ir ao estado 8


Estado 2

    5 declaracao: TUPLE • declaracao_tupla

    TIPO  deslocar, e ir ao estado 9

    declaracao_tupla  ir ao estado 10
    var_decl          ir ao estado 11


Estado 3

    0 $accept: programa • $end

    $end  deslocar, e ir ao estado 12


Estado 4

    1 programa: declaracoes •
    2 declaracoes: declaracoes • declaracao

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 1 (programa)

    declaracao  ir ao estado 13
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7


Estado 5

    3 declaracoes: declaracao •

    $padrão  reduzir usando a regra 3 (declaracoes)


Estado 6

    4 declaracao: var_decl •

    $padrão  reduzir usando a regra 4 (declaracao)


Estado 7

    6 declaracao: func_decl •

    $padrão  reduzir usando a regra 6 (declaracao)


Estado 8

    9 var_decl: TIPO ID • ';'
   12 func_decl: TIPO ID • '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'
   14          | TIPO ID • '(' ')' '{' $@3 cod_blocks '}' ';'

    ';'  deslocar, e ir ao estado 14
    '('  deslocar, e ir ao estado 15


Estado 9

    7 declaracao_tupla: TIPO • ',' declaracao_tupla
    9 var_decl: TIPO • ID ';'

    ID   deslocar, e ir ao estado 16
    ','  deslocar, e ir ao estado 17


Estado 10

    5 declaracao: TUPLE declaracao_tupla •

    $padrão  reduzir usando a regra 5 (declaracao)


Estado 11

    8 declaracao_tupla: var_decl •

    $padrão  reduzir usando a regra 8 (declaracao_tupla)


Estado 12

    0 $accept: programa $end •

    $padrão  aceitar


Estado 13

    2 declaracoes: declaracoes declaracao •

    $padrão  reduzir usando a regra 2 (declaracoes)


Estado 14

    9 var_decl: TIPO ID ';' •

    $padrão  reduzir usando a regra 9 (var_decl)


Estado 15

   12 func_decl: TIPO ID '(' • $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';'
   14          | TIPO ID '(' • ')' '{' $@3 cod_blocks '}' ';'

    ')'  deslocar, e ir ao estado 18

    $padrão  reduzir usando a regra 10 ($@1)

    $@1  ir ao estado 19


Estado 16

    9 var_decl: TIPO ID • ';'

    ';'  deslocar, e ir ao estado 14


Estado 17

    7 declaracao_tupla: TIPO ',' • declaracao_tupla

    TIPO  deslocar, e ir ao estado 9

    declaracao_tupla  ir ao estado 20
    var_decl          ir ao estado 11


Estado 18

   14 func_decl: TIPO ID '(' ')' • '{' $@3 cod_blocks '}' ';'

    '{'  deslocar, e ir ao estado 21


Estado 19

   12 func_decl: TIPO ID '(' $@1 • parm_tipos ')' $@2 '{' cod_blocks '}' ';'

    TIPO   deslocar, e ir ao estado 22
    TUPLE  deslocar, e ir ao estado 23

    parm_tipos  ir ao estado 24


Estado 20

    7 declaracao_tupla: TIPO ',' declaracao_tupla •

    $padrão  reduzir usando a regra 7 (declaracao_tupla)


Estado 21

   14 func_decl: TIPO ID '(' ')' '{' • $@3 cod_blocks '}' ';'

    $padrão  reduzir usando a regra 13 ($@3)

    $@3  ir ao estado 25


Estado 22

   17 parm_tipos: TIPO • ID ','
   18           | TIPO • ID
   19           | TIPO • ID '[' ']'

    ID  deslocar, e ir ao estado 26


Estado 23

   20 parm_tipos: TUPLE • ID

    ID  deslocar, e ir ao estado 27


Estado 24

   12 func_decl: TIPO ID '(' $@1 parm_tipos • ')' $@2 '{' cod_blocks '}' ';'
   15 parm_tipos: parm_tipos • TIPO ID
   16           | parm_tipos • TIPO ID '[' ']'

    TIPO  deslocar, e ir ao estado 28
    ')'   deslocar, e ir ao estado 29


Estado 25

   14 func_decl: TIPO ID '(' ')' '{' $@3 • cod_blocks '}' ';'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 37
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 26

   17 parm_tipos: TIPO ID • ','
   18           | TIPO ID •
   19           | TIPO ID • '[' ']'

    ','  deslocar, e ir ao estado 43
    '['  deslocar, e ir ao estado 44

    $padrão  reduzir usando a regra 18 (parm_tipos)


Estado 27

   20 parm_tipos: TUPLE ID •

    $padrão  reduzir usando a regra 20 (parm_tipos)


Estado 28

   15 parm_tipos: parm_tipos TIPO • ID
   16           | parm_tipos TIPO • ID '[' ']'

    ID  deslocar, e ir ao estado 45


Estado 29

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' • $@2 '{' cod_blocks '}' ';'

    $padrão  reduzir usando a regra 11 ($@2)

    $@2  ir ao estado 46


Estado 30

   23 cod_block: IF • '(' expressao_logica ')' '{' cod_blocks '}'
   24          | IF • '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    '('  deslocar, e ir ao estado 47


Estado 31

   25 cod_block: LACOS • '(' expressao_logica ')' '{' cod_block '}'

    '('  deslocar, e ir ao estado 48


Estado 32

   26 cod_block: RETORNO • ';'
   27          | RETORNO • termo ';'
   28          | RETORNO • '(' expressao ')' ';'

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33
    ';'    deslocar, e ir ao estado 51
    '('    deslocar, e ir ao estado 52

    termo     ir ao estado 53
    variable  ir ao estado 54


Estado 33

   57 variable: ID •

    $padrão  reduzir usando a regra 57 (variable)


Estado 34

   51 print: PRINT • '(' termo ')' ';'
   52      | PRINT • '(' palavra ')' ';'

    '('  deslocar, e ir ao estado 55


Estado 35

   50 scan: SCAN • '(' variable ')'

    '('  deslocar, e ir ao estado 56


Estado 36

    2 declaracoes: declaracoes • declaracao
   34 cod_block: declaracoes •

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    TIPO     [reduzir usando a regra 34 (cod_block)]
    TUPLE    [reduzir usando a regra 34 (cod_block)]
    $padrão  reduzir usando a regra 34 (cod_block)

    declaracao  ir ao estado 13
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7


Estado 37

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks • '}' ';'
   21 cod_blocks: cod_blocks • cod_block

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 57

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 58
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 38

   22 cod_blocks: cod_block •

    $padrão  reduzir usando a regra 22 (cod_blocks)


Estado 39

   29 cod_block: assign • ';'

    ';'  deslocar, e ir ao estado 59


Estado 40

   33 cod_block: scan • '(' variable ')' ';'

    '('  deslocar, e ir ao estado 60


Estado 41

   30 cod_block: print •

    $padrão  reduzir usando a regra 30 (cod_block)


Estado 42

   31 cod_block: variable • '(' expressao ')' ';'
   32          | variable • '(' ')' ';'
   35 assign: variable • OP_ASSIGN expressao
   36       | variable • '[' INT ']' OP_ASSIGN expressao

    OP_ASSIGN  deslocar, e ir ao estado 61
    '('        deslocar, e ir ao estado 62
    '['        deslocar, e ir ao estado 63


Estado 43

   17 parm_tipos: TIPO ID ',' •

    $padrão  reduzir usando a regra 17 (parm_tipos)


Estado 44

   19 parm_tipos: TIPO ID '[' • ']'

    ']'  deslocar, e ir ao estado 64


Estado 45

   15 parm_tipos: parm_tipos TIPO ID •
   16           | parm_tipos TIPO ID • '[' ']'

    '['  deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 15 (parm_tipos)


Estado 46

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 • '{' cod_blocks '}' ';'

    '{'  deslocar, e ir ao estado 66


Estado 47

   23 cod_block: IF '(' • expressao_logica ')' '{' cod_blocks '}'
   24          | IF '(' • expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    OP_LOG  deslocar, e ir ao estado 67
    '('     deslocar, e ir ao estado 68
    '!'     deslocar, e ir ao estado 69

    expressao_logica  ir ao estado 70
    op_expressao      ir ao estado 71
    termo             ir ao estado 72
    variable          ir ao estado 54


Estado 48

   25 cod_block: LACOS '(' • expressao_logica ')' '{' cod_block '}'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    OP_LOG  deslocar, e ir ao estado 67
    '('     deslocar, e ir ao estado 68
    '!'     deslocar, e ir ao estado 69

    expressao_logica  ir ao estado 73
    op_expressao      ir ao estado 71
    termo             ir ao estado 72
    variable          ir ao estado 54


Estado 49

   47 termo: INT •

    $padrão  reduzir usando a regra 47 (termo)


Estado 50

   48 termo: FLOAT •

    $padrão  reduzir usando a regra 48 (termo)


Estado 51

   26 cod_block: RETORNO ';' •

    $padrão  reduzir usando a regra 26 (cod_block)


Estado 52

   28 cod_block: RETORNO '(' • expressao ')' ';'

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33
    '('    deslocar, e ir ao estado 74

    expressao     ir ao estado 75
    op_expressao  ir ao estado 76
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 53

   27 cod_block: RETORNO termo • ';'

    ';'  deslocar, e ir ao estado 77


Estado 54

   46 termo: variable •
   49      | variable • '[' INT ']'

    '['  deslocar, e ir ao estado 78

    $padrão  reduzir usando a regra 46 (termo)


Estado 55

   51 print: PRINT '(' • termo ')' ';'
   52      | PRINT '(' • palavra ')' ';'

    INT     deslocar, e ir ao estado 49
    FLOAT   deslocar, e ir ao estado 50
    ID      deslocar, e ir ao estado 33
    DIGITO  deslocar, e ir ao estado 79
    LETRA   deslocar, e ir ao estado 80

    termo     ir ao estado 81
    palavra   ir ao estado 82
    variable  ir ao estado 54


Estado 56

   50 scan: SCAN '(' • variable ')'

    ID  deslocar, e ir ao estado 33

    variable  ir ao estado 83


Estado 57

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' • ';'

    ';'  deslocar, e ir ao estado 84


Estado 58

   21 cod_blocks: cod_blocks cod_block •

    $padrão  reduzir usando a regra 21 (cod_blocks)


Estado 59

   29 cod_block: assign ';' •

    $padrão  reduzir usando a regra 29 (cod_block)


Estado 60

   33 cod_block: scan '(' • variable ')' ';'

    ID  deslocar, e ir ao estado 33

    variable  ir ao estado 85


Estado 61

   35 assign: variable OP_ASSIGN • expressao

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33
    '('    deslocar, e ir ao estado 74

    expressao     ir ao estado 86
    op_expressao  ir ao estado 76
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 62

   31 cod_block: variable '(' • expressao ')' ';'
   32          | variable '(' • ')' ';'

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33
    '('    deslocar, e ir ao estado 74
    ')'    deslocar, e ir ao estado 87

    expressao     ir ao estado 88
    op_expressao  ir ao estado 76
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 63

   36 assign: variable '[' • INT ']' OP_ASSIGN expressao

    INT  deslocar, e ir ao estado 89


Estado 64

   19 parm_tipos: TIPO ID '[' ']' •

    $padrão  reduzir usando a regra 19 (parm_tipos)


Estado 65

   16 parm_tipos: parm_tipos TIPO ID '[' • ']'

    ']'  deslocar, e ir ao estado 90


Estado 66

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' • cod_blocks '}' ';'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 91
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 67

   39 expressao_logica: OP_LOG • op_expressao

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33

    op_expressao  ir ao estado 92
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 68

   42 expressao_logica: '(' • op_expressao ')'

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33

    op_expressao  ir ao estado 93
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 69

   40 expressao_logica: '!' • op_expressao

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33

    op_expressao  ir ao estado 94
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 70

   23 cod_block: IF '(' expressao_logica • ')' '{' cod_blocks '}'
   24          | IF '(' expressao_logica • ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    ')'  deslocar, e ir ao estado 95


Estado 71

   41 expressao_logica: op_expressao • OP_COMP op_expressao
   43                 | op_expressao •
   44 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 96
    OP_COMP   deslocar, e ir ao estado 97

    $padrão  reduzir usando a regra 43 (expressao_logica)


Estado 72

   45 op_expressao: termo •

    $padrão  reduzir usando a regra 45 (op_expressao)


Estado 73

   25 cod_block: LACOS '(' expressao_logica • ')' '{' cod_block '}'

    ')'  deslocar, e ir ao estado 98


Estado 74

   38 expressao: '(' • expressao ')'

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33
    '('    deslocar, e ir ao estado 74

    expressao     ir ao estado 99
    op_expressao  ir ao estado 76
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 75

   28 cod_block: RETORNO '(' expressao • ')' ';'

    ')'  deslocar, e ir ao estado 100


Estado 76

   37 expressao: op_expressao •
   44 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 96

    $padrão  reduzir usando a regra 37 (expressao)


Estado 77

   27 cod_block: RETORNO termo ';' •

    $padrão  reduzir usando a regra 27 (cod_block)


Estado 78

   49 termo: variable '[' • INT ']'

    INT  deslocar, e ir ao estado 101


Estado 79

   56 palavra: DIGITO •

    $padrão  reduzir usando a regra 56 (palavra)


Estado 80

   55 palavra: LETRA •

    $padrão  reduzir usando a regra 55 (palavra)


Estado 81

   51 print: PRINT '(' termo • ')' ';'

    ')'  deslocar, e ir ao estado 102


Estado 82

   52 print: PRINT '(' palavra • ')' ';'
   53 palavra: palavra • LETRA
   54        | palavra • DIGITO

    DIGITO  deslocar, e ir ao estado 103
    LETRA   deslocar, e ir ao estado 104
    ')'     deslocar, e ir ao estado 105


Estado 83

   50 scan: SCAN '(' variable • ')'

    ')'  deslocar, e ir ao estado 106


Estado 84

   14 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' ';' •

    $padrão  reduzir usando a regra 14 (func_decl)


Estado 85

   33 cod_block: scan '(' variable • ')' ';'

    ')'  deslocar, e ir ao estado 107


Estado 86

   35 assign: variable OP_ASSIGN expressao •

    $padrão  reduzir usando a regra 35 (assign)


Estado 87

   32 cod_block: variable '(' ')' • ';'

    ';'  deslocar, e ir ao estado 108


Estado 88

   31 cod_block: variable '(' expressao • ')' ';'

    ')'  deslocar, e ir ao estado 109


Estado 89

   36 assign: variable '[' INT • ']' OP_ASSIGN expressao

    ']'  deslocar, e ir ao estado 110


Estado 90

   16 parm_tipos: parm_tipos TIPO ID '[' ']' •

    $padrão  reduzir usando a regra 16 (parm_tipos)


Estado 91

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks • '}' ';'
   21 cod_blocks: cod_blocks • cod_block

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 111

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 58
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 92

   39 expressao_logica: OP_LOG op_expressao •
   44 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 96

    $padrão  reduzir usando a regra 39 (expressao_logica)


Estado 93

   42 expressao_logica: '(' op_expressao • ')'
   44 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 96
    ')'       deslocar, e ir ao estado 112


Estado 94

   40 expressao_logica: '!' op_expressao •
   44 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 96

    $padrão  reduzir usando a regra 40 (expressao_logica)


Estado 95

   23 cod_block: IF '(' expressao_logica ')' • '{' cod_blocks '}'
   24          | IF '(' expressao_logica ')' • '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 113


Estado 96

   44 op_expressao: op_expressao OP_ARITM • termo

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33

    termo     ir ao estado 114
    variable  ir ao estado 54


Estado 97

   41 expressao_logica: op_expressao OP_COMP • op_expressao

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33

    op_expressao  ir ao estado 115
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 98

   25 cod_block: LACOS '(' expressao_logica ')' • '{' cod_block '}'

    '{'  deslocar, e ir ao estado 116


Estado 99

   38 expressao: '(' expressao • ')'

    ')'  deslocar, e ir ao estado 117


Estado 100

   28 cod_block: RETORNO '(' expressao ')' • ';'

    ';'  deslocar, e ir ao estado 118


Estado 101

   49 termo: variable '[' INT • ']'

    ']'  deslocar, e ir ao estado 119


Estado 102

   51 print: PRINT '(' termo ')' • ';'

    ';'  deslocar, e ir ao estado 120


Estado 103

   54 palavra: palavra DIGITO •

    $padrão  reduzir usando a regra 54 (palavra)


Estado 104

   53 palavra: palavra LETRA •

    $padrão  reduzir usando a regra 53 (palavra)


Estado 105

   52 print: PRINT '(' palavra ')' • ';'

    ';'  deslocar, e ir ao estado 121


Estado 106

   50 scan: SCAN '(' variable ')' •

    $padrão  reduzir usando a regra 50 (scan)


Estado 107

   33 cod_block: scan '(' variable ')' • ';'

    ';'  deslocar, e ir ao estado 122


Estado 108

   32 cod_block: variable '(' ')' ';' •

    $padrão  reduzir usando a regra 32 (cod_block)


Estado 109

   31 cod_block: variable '(' expressao ')' • ';'

    ';'  deslocar, e ir ao estado 123


Estado 110

   36 assign: variable '[' INT ']' • OP_ASSIGN expressao

    OP_ASSIGN  deslocar, e ir ao estado 124


Estado 111

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' • ';'

    ';'  deslocar, e ir ao estado 125


Estado 112

   42 expressao_logica: '(' op_expressao ')' •

    $padrão  reduzir usando a regra 42 (expressao_logica)


Estado 113

   23 cod_block: IF '(' expressao_logica ')' '{' • cod_blocks '}'
   24          | IF '(' expressao_logica ')' '{' • cod_blocks '}' ELSE '{' cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 126
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 114

   44 op_expressao: op_expressao OP_ARITM termo •

    $padrão  reduzir usando a regra 44 (op_expressao)


Estado 115

   41 expressao_logica: op_expressao OP_COMP op_expressao •
   44 op_expressao: op_expressao • OP_ARITM termo

    OP_ARITM  deslocar, e ir ao estado 96

    $padrão  reduzir usando a regra 41 (expressao_logica)


Estado 116

   25 cod_block: LACOS '(' expressao_logica ')' '{' • cod_block '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 127
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 117

   38 expressao: '(' expressao ')' •

    $padrão  reduzir usando a regra 38 (expressao)


Estado 118

   28 cod_block: RETORNO '(' expressao ')' ';' •

    $padrão  reduzir usando a regra 28 (cod_block)


Estado 119

   49 termo: variable '[' INT ']' •

    $padrão  reduzir usando a regra 49 (termo)


Estado 120

   51 print: PRINT '(' termo ')' ';' •

    $padrão  reduzir usando a regra 51 (print)


Estado 121

   52 print: PRINT '(' palavra ')' ';' •

    $padrão  reduzir usando a regra 52 (print)


Estado 122

   33 cod_block: scan '(' variable ')' ';' •

    $padrão  reduzir usando a regra 33 (cod_block)


Estado 123

   31 cod_block: variable '(' expressao ')' ';' •

    $padrão  reduzir usando a regra 31 (cod_block)


Estado 124

   36 assign: variable '[' INT ']' OP_ASSIGN • expressao

    INT    deslocar, e ir ao estado 49
    FLOAT  deslocar, e ir ao estado 50
    ID     deslocar, e ir ao estado 33
    '('    deslocar, e ir ao estado 74

    expressao     ir ao estado 128
    op_expressao  ir ao estado 76
    termo         ir ao estado 72
    variable      ir ao estado 54


Estado 125

   12 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' ';' •

    $padrão  reduzir usando a regra 12 (func_decl)


Estado 126

   21 cod_blocks: cod_blocks • cod_block
   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks • '}'
   24          | IF '(' expressao_logica ')' '{' cod_blocks • '}' ELSE '{' cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 129

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 58
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 127

   25 cod_block: LACOS '(' expressao_logica ')' '{' cod_block • '}'

    '}'  deslocar, e ir ao estado 130


Estado 128

   36 assign: variable '[' INT ']' OP_ASSIGN expressao •

    $padrão  reduzir usando a regra 36 (assign)


Estado 129

   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' •
   24          | IF '(' expressao_logica ')' '{' cod_blocks '}' • ELSE '{' cod_blocks '}'

    ELSE  deslocar, e ir ao estado 131

    $padrão  reduzir usando a regra 23 (cod_block)


Estado 130

   25 cod_block: LACOS '(' expressao_logica ')' '{' cod_block '}' •

    $padrão  reduzir usando a regra 25 (cod_block)


Estado 131

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE • '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 132


Estado 132

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' • cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_blocks   ir ao estado 133
    cod_block    ir ao estado 38
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 133

   21 cod_blocks: cod_blocks • cod_block
   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks • '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 30
    LACOS    deslocar, e ir ao estado 31
    RETORNO  deslocar, e ir ao estado 32
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 33
    PRINT    deslocar, e ir ao estado 34
    SCAN     deslocar, e ir ao estado 35
    '}'      deslocar, e ir ao estado 134

    declaracoes  ir ao estado 36
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7
    cod_block    ir ao estado 58
    assign       ir ao estado 39
    scan         ir ao estado 40
    print        ir ao estado 41
    variable     ir ao estado 42


Estado 134

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}' •

    $padrão  reduzir usando a regra 24 (cod_block)
