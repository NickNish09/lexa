Terminais sem uso na gramática

    SEPARADOR


Gramática

    0 $accept: programa $end

    1 programa: declaracoes

    2 declaracoes: declaracoes declaracao
    3            | declaracao

    4 declaracao: var_decl
    5           | TUPLE declaracao_tupla
    6           | func_decl

    7 declaracao_tupla: TIPO ID ',' declaracao_tupla
    8                 | TIPO ID ID ';'
    9                 | ID

   10 var_decl: TIPO ID ';'

   11 $@1: %empty

   12 $@2: %empty

   13 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}'

   14 $@3: %empty

   15 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}'

   16 parm_tipos: parm_tipos ',' TIPO ID
   17           | parm_tipos TIPO ID '[' ']'
   18           | TIPO ID
   19           | TIPO ID '[' ']'
   20           | TUPLE ID

   21 cod_blocks: cod_blocks cod_block
   22           | cod_block

   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}'
   24          | IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'
   25          | LACOS '(' expressao_logica ')' '{' cod_block '}'
   26          | RETORNO ';'
   27          | RETORNO termo ';'
   28          | RETORNO '(' expressao ')' ';'
   29          | assign ';'
   30          | print
   31          | func_call
   32          | scan '(' variable ')' ';'
   33          | declaracao

   34 assign: variable OP_ASSIGN expressao
   35       | variable '[' INT ']' OP_ASSIGN expressao

   36 expressao: '(' expressao ')'
   37          | op_expressao
   38          | func_call

   39 expressao_logica: OP_LOG op_expressao
   40                 | '!' op_expressao
   41                 | op_expressao OP_COMP op_expressao
   42                 | '(' op_expressao ')'
   43                 | op_expressao
   44                 | BOOL

   45 op_expressao: op_expressao OP_ARITM termo
   46             | termo
   47             | op_expressao ',' termo

   48 termo: variable
   49      | INT
   50      | FLOAT
   51      | variable '[' INT ']'
   52      | palavra

   53 scan: SCAN '(' variable ')'

   54 print: PRINT '(' termo ')' ';'

   55 func_call: ID '(' func_args ')'
   56          | ID '(' ')'

   57 func_args: func_args ',' func_arg
   58          | func_arg

   59 func_arg: ID
   60         | ID '[' ID ']'
   61         | INT
   62         | FLOAT
   63         | palavra

   64 palavra: palavra LETRA
   65        | palavra DIGITO
   66        | LETRA
   67        | DIGITO

   68 variable: ID
   69         | ID PONTO ID


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '!' (33) 40
    '(' (40) 13 15 23 24 25 28 32 36 42 53 54 55 56
    ')' (41) 13 15 23 24 25 28 32 36 42 53 54 55 56
    ',' (44) 7 16 47 57
    ';' (59) 8 10 26 27 28 29 32 54
    '[' (91) 17 19 35 51 60
    ']' (93) 17 19 35 51 60
    '{' (123) 13 15 23 24 25
    '}' (125) 13 15 23 24 25
    error (256)
    BOOL (258) 44
    TIPO <tipo> (259) 7 8 10 13 15 16 17 18 19
    IF <str> (260) 23 24
    ELSE <str> (261) 24
    LACOS (262) 25
    RETORNO <str> (263) 26 27 28
    INT <str> (264) 35 49 51 61
    FLOAT <str> (265) 50 62
    TUPLE <str> (266) 5 20
    ID <id> (267) 7 8 9 10 13 15 16 17 18 19 20 55 56 59 60 68 69
    DIGITO <str> (268) 65 67
    LETRA <str> (269) 64 66
    SEPARADOR (270)
    PONTO (271) 69
    PRINT (272) 54
    SCAN (273) 53
    OP_ASSIGN <operador> (274) 34 35
    OP_ARITM <operador> (275) 45
    OP_LOG <operador> (276) 39
    OP_COMP <operador> (277) 41


Não terminais com as regras onde eles aparecem

    $accept (32)
        à esquerda: 0
    programa <nd> (33)
        à esquerda: 1
        à direita: 0
    declaracoes <nd> (34)
        à esquerda: 2 3
        à direita: 1 2
    declaracao <nd> (35)
        à esquerda: 4 5 6
        à direita: 2 3 33
    declaracao_tupla <nd> (36)
        à esquerda: 7 8 9
        à direita: 5 7
    var_decl <nd> (37)
        à esquerda: 10
        à direita: 4
    func_decl <nd> (38)
        à esquerda: 13 15
        à direita: 6
    $@1 (39)
        à esquerda: 11
        à direita: 13
    $@2 (40)
        à esquerda: 12
        à direita: 13
    $@3 (41)
        à esquerda: 14
        à direita: 15
    parm_tipos <nd> (42)
        à esquerda: 16 17 18 19 20
        à direita: 13 16 17
    cod_blocks <nd> (43)
        à esquerda: 21 22
        à direita: 13 15 21 23 24
    cod_block <nd> (44)
        à esquerda: 23 24 25 26 27 28 29 30 31 32 33
        à direita: 21 22 25
    assign <nd> (45)
        à esquerda: 34 35
        à direita: 29
    expressao <nd> (46)
        à esquerda: 36 37 38
        à direita: 28 34 35 36
    expressao_logica <nd> (47)
        à esquerda: 39 40 41 42 43 44
        à direita: 23 24 25
    op_expressao <nd> (48)
        à esquerda: 45 46 47
        à direita: 37 39 40 41 42 43 45 47
    termo <nd> (49)
        à esquerda: 48 49 50 51 52
        à direita: 27 45 46 47 54
    scan <nd> (50)
        à esquerda: 53
        à direita: 32
    print <nd> (51)
        à esquerda: 54
        à direita: 30
    func_call <nd> (52)
        à esquerda: 55 56
        à direita: 31 38
    func_args <nd> (53)
        à esquerda: 57 58
        à direita: 55 57
    func_arg <nd> (54)
        à esquerda: 59 60 61 62 63
        à direita: 57 58
    palavra <str> (55)
        à esquerda: 64 65 66 67
        à direita: 52 63 64 65
    variable <str> (56)
        à esquerda: 68 69
        à direita: 32 34 35 48 51 53


Estado 0

    0 $accept: • programa $end

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    programa     ir ao estado 3
    declaracoes  ir ao estado 4
    declaracao   ir ao estado 5
    var_decl     ir ao estado 6
    func_decl    ir ao estado 7


Estado 1

   10 var_decl: TIPO • ID ';'
   13 func_decl: TIPO • ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}'
   15          | TIPO • ID '(' ')' '{' $@3 cod_blocks '}'

    ID  deslocar, e ir ao estado 8


Estado 2

    5 declaracao: TUPLE • declaracao_tupla

    TIPO  deslocar, e ir ao estado 9
    ID    deslocar, e ir ao estado 10

    declaracao_tupla  ir ao estado 11


Estado 3

    0 $accept: programa • $end

    $end  deslocar, e ir ao estado 12


Estado 4

    1 programa: declaracoes •
    2 declaracoes: declaracoes • declaracao

    TIPO   deslocar, e ir ao estado 1
    TUPLE  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 1 (programa)

    declaracao  ir ao estado 13
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7


Estado 5

    3 declaracoes: declaracao •

    $padrão  reduzir usando a regra 3 (declaracoes)


Estado 6

    4 declaracao: var_decl •

    $padrão  reduzir usando a regra 4 (declaracao)


Estado 7

    6 declaracao: func_decl •

    $padrão  reduzir usando a regra 6 (declaracao)


Estado 8

   10 var_decl: TIPO ID • ';'
   13 func_decl: TIPO ID • '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}'
   15          | TIPO ID • '(' ')' '{' $@3 cod_blocks '}'

    ';'  deslocar, e ir ao estado 14
    '('  deslocar, e ir ao estado 15


Estado 9

    7 declaracao_tupla: TIPO • ID ',' declaracao_tupla
    8                 | TIPO • ID ID ';'

    ID  deslocar, e ir ao estado 16


Estado 10

    9 declaracao_tupla: ID •

    $padrão  reduzir usando a regra 9 (declaracao_tupla)


Estado 11

    5 declaracao: TUPLE declaracao_tupla •

    $padrão  reduzir usando a regra 5 (declaracao)


Estado 12

    0 $accept: programa $end •

    $padrão  aceitar


Estado 13

    2 declaracoes: declaracoes declaracao •

    $padrão  reduzir usando a regra 2 (declaracoes)


Estado 14

   10 var_decl: TIPO ID ';' •

    $padrão  reduzir usando a regra 10 (var_decl)


Estado 15

   13 func_decl: TIPO ID '(' • $@1 parm_tipos ')' $@2 '{' cod_blocks '}'
   15          | TIPO ID '(' • ')' '{' $@3 cod_blocks '}'

    ')'  deslocar, e ir ao estado 17

    $padrão  reduzir usando a regra 11 ($@1)

    $@1  ir ao estado 18


Estado 16

    7 declaracao_tupla: TIPO ID • ',' declaracao_tupla
    8                 | TIPO ID • ID ';'

    ID   deslocar, e ir ao estado 19
    ','  deslocar, e ir ao estado 20


Estado 17

   15 func_decl: TIPO ID '(' ')' • '{' $@3 cod_blocks '}'

    '{'  deslocar, e ir ao estado 21


Estado 18

   13 func_decl: TIPO ID '(' $@1 • parm_tipos ')' $@2 '{' cod_blocks '}'

    TIPO   deslocar, e ir ao estado 22
    TUPLE  deslocar, e ir ao estado 23

    parm_tipos  ir ao estado 24


Estado 19

    8 declaracao_tupla: TIPO ID ID • ';'

    ';'  deslocar, e ir ao estado 25


Estado 20

    7 declaracao_tupla: TIPO ID ',' • declaracao_tupla

    TIPO  deslocar, e ir ao estado 9
    ID    deslocar, e ir ao estado 10

    declaracao_tupla  ir ao estado 26


Estado 21

   15 func_decl: TIPO ID '(' ')' '{' • $@3 cod_blocks '}'

    $padrão  reduzir usando a regra 14 ($@3)

    $@3  ir ao estado 27


Estado 22

   18 parm_tipos: TIPO • ID
   19           | TIPO • ID '[' ']'

    ID  deslocar, e ir ao estado 28


Estado 23

   20 parm_tipos: TUPLE • ID

    ID  deslocar, e ir ao estado 29


Estado 24

   13 func_decl: TIPO ID '(' $@1 parm_tipos • ')' $@2 '{' cod_blocks '}'
   16 parm_tipos: parm_tipos • ',' TIPO ID
   17           | parm_tipos • TIPO ID '[' ']'

    TIPO  deslocar, e ir ao estado 30
    ','   deslocar, e ir ao estado 31
    ')'   deslocar, e ir ao estado 32


Estado 25

    8 declaracao_tupla: TIPO ID ID ';' •

    $padrão  reduzir usando a regra 8 (declaracao_tupla)


Estado 26

    7 declaracao_tupla: TIPO ID ',' declaracao_tupla •

    $padrão  reduzir usando a regra 7 (declaracao_tupla)


Estado 27

   15 func_decl: TIPO ID '(' ')' '{' $@3 • cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_blocks  ir ao estado 40
    cod_block   ir ao estado 41
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 28

   18 parm_tipos: TIPO ID •
   19           | TIPO ID • '[' ']'

    '['  deslocar, e ir ao estado 47

    $padrão  reduzir usando a regra 18 (parm_tipos)


Estado 29

   20 parm_tipos: TUPLE ID •

    $padrão  reduzir usando a regra 20 (parm_tipos)


Estado 30

   17 parm_tipos: parm_tipos TIPO • ID '[' ']'

    ID  deslocar, e ir ao estado 48


Estado 31

   16 parm_tipos: parm_tipos ',' • TIPO ID

    TIPO  deslocar, e ir ao estado 49


Estado 32

   13 func_decl: TIPO ID '(' $@1 parm_tipos ')' • $@2 '{' cod_blocks '}'

    $padrão  reduzir usando a regra 12 ($@2)

    $@2  ir ao estado 50


Estado 33

   23 cod_block: IF • '(' expressao_logica ')' '{' cod_blocks '}'
   24          | IF • '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    '('  deslocar, e ir ao estado 51


Estado 34

   25 cod_block: LACOS • '(' expressao_logica ')' '{' cod_block '}'

    '('  deslocar, e ir ao estado 52


Estado 35

   26 cod_block: RETORNO • ';'
   27          | RETORNO • termo ';'
   28          | RETORNO • '(' expressao ')' ';'

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    ';'     deslocar, e ir ao estado 58
    '('     deslocar, e ir ao estado 59

    termo     ir ao estado 60
    palavra   ir ao estado 61
    variable  ir ao estado 62


Estado 36

   55 func_call: ID • '(' func_args ')'
   56          | ID • '(' ')'
   68 variable: ID •
   69         | ID • PONTO ID

    PONTO  deslocar, e ir ao estado 63
    '('    deslocar, e ir ao estado 64

    $padrão  reduzir usando a regra 68 (variable)


Estado 37

   54 print: PRINT • '(' termo ')' ';'

    '('  deslocar, e ir ao estado 65


Estado 38

   53 scan: SCAN • '(' variable ')'

    '('  deslocar, e ir ao estado 66


Estado 39

   33 cod_block: declaracao •

    $padrão  reduzir usando a regra 33 (cod_block)


Estado 40

   15 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks • '}'
   21 cod_blocks: cod_blocks • cod_block

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38
    '}'      deslocar, e ir ao estado 67

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_block   ir ao estado 68
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 41

   22 cod_blocks: cod_block •

    $padrão  reduzir usando a regra 22 (cod_blocks)


Estado 42

   29 cod_block: assign • ';'

    ';'  deslocar, e ir ao estado 69


Estado 43

   32 cod_block: scan • '(' variable ')' ';'

    '('  deslocar, e ir ao estado 70


Estado 44

   30 cod_block: print •

    $padrão  reduzir usando a regra 30 (cod_block)


Estado 45

   31 cod_block: func_call •

    $padrão  reduzir usando a regra 31 (cod_block)


Estado 46

   34 assign: variable • OP_ASSIGN expressao
   35       | variable • '[' INT ']' OP_ASSIGN expressao

    OP_ASSIGN  deslocar, e ir ao estado 71
    '['        deslocar, e ir ao estado 72


Estado 47

   19 parm_tipos: TIPO ID '[' • ']'

    ']'  deslocar, e ir ao estado 73


Estado 48

   17 parm_tipos: parm_tipos TIPO ID • '[' ']'

    '['  deslocar, e ir ao estado 74


Estado 49

   16 parm_tipos: parm_tipos ',' TIPO • ID

    ID  deslocar, e ir ao estado 75


Estado 50

   13 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 • '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 76


Estado 51

   23 cod_block: IF '(' • expressao_logica ')' '{' cod_blocks '}'
   24          | IF '(' • expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    BOOL    deslocar, e ir ao estado 77
    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    OP_LOG  deslocar, e ir ao estado 78
    '('     deslocar, e ir ao estado 79
    '!'     deslocar, e ir ao estado 80

    expressao_logica  ir ao estado 81
    op_expressao      ir ao estado 82
    termo             ir ao estado 83
    palavra           ir ao estado 61
    variable          ir ao estado 62


Estado 52

   25 cod_block: LACOS '(' • expressao_logica ')' '{' cod_block '}'

    BOOL    deslocar, e ir ao estado 77
    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    OP_LOG  deslocar, e ir ao estado 78
    '('     deslocar, e ir ao estado 79
    '!'     deslocar, e ir ao estado 80

    expressao_logica  ir ao estado 84
    op_expressao      ir ao estado 82
    termo             ir ao estado 83
    palavra           ir ao estado 61
    variable          ir ao estado 62


Estado 53

   49 termo: INT •

    $padrão  reduzir usando a regra 49 (termo)


Estado 54

   50 termo: FLOAT •

    $padrão  reduzir usando a regra 50 (termo)


Estado 55

   68 variable: ID •
   69         | ID • PONTO ID

    PONTO  deslocar, e ir ao estado 63

    $padrão  reduzir usando a regra 68 (variable)


Estado 56

   67 palavra: DIGITO •

    $padrão  reduzir usando a regra 67 (palavra)


Estado 57

   66 palavra: LETRA •

    $padrão  reduzir usando a regra 66 (palavra)


Estado 58

   26 cod_block: RETORNO ';' •

    $padrão  reduzir usando a regra 26 (cod_block)


Estado 59

   28 cod_block: RETORNO '(' • expressao ')' ';'

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 36
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    '('     deslocar, e ir ao estado 85

    expressao     ir ao estado 86
    op_expressao  ir ao estado 87
    termo         ir ao estado 83
    func_call     ir ao estado 88
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 60

   27 cod_block: RETORNO termo • ';'

    ';'  deslocar, e ir ao estado 89


Estado 61

   52 termo: palavra •
   64 palavra: palavra • LETRA
   65        | palavra • DIGITO

    DIGITO  deslocar, e ir ao estado 90
    LETRA   deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 52 (termo)


Estado 62

   48 termo: variable •
   51      | variable • '[' INT ']'

    '['  deslocar, e ir ao estado 92

    $padrão  reduzir usando a regra 48 (termo)


Estado 63

   69 variable: ID PONTO • ID

    ID  deslocar, e ir ao estado 93


Estado 64

   55 func_call: ID '(' • func_args ')'
   56          | ID '(' • ')'

    INT     deslocar, e ir ao estado 94
    FLOAT   deslocar, e ir ao estado 95
    ID      deslocar, e ir ao estado 96
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    ')'     deslocar, e ir ao estado 97

    func_args  ir ao estado 98
    func_arg   ir ao estado 99
    palavra    ir ao estado 100


Estado 65

   54 print: PRINT '(' • termo ')' ';'

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    termo     ir ao estado 101
    palavra   ir ao estado 61
    variable  ir ao estado 62


Estado 66

   53 scan: SCAN '(' • variable ')'

    ID  deslocar, e ir ao estado 55

    variable  ir ao estado 102


Estado 67

   15 func_decl: TIPO ID '(' ')' '{' $@3 cod_blocks '}' •

    $padrão  reduzir usando a regra 15 (func_decl)


Estado 68

   21 cod_blocks: cod_blocks cod_block •

    $padrão  reduzir usando a regra 21 (cod_blocks)


Estado 69

   29 cod_block: assign ';' •

    $padrão  reduzir usando a regra 29 (cod_block)


Estado 70

   32 cod_block: scan '(' • variable ')' ';'

    ID  deslocar, e ir ao estado 55

    variable  ir ao estado 103


Estado 71

   34 assign: variable OP_ASSIGN • expressao

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 36
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    '('     deslocar, e ir ao estado 85

    expressao     ir ao estado 104
    op_expressao  ir ao estado 87
    termo         ir ao estado 83
    func_call     ir ao estado 88
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 72

   35 assign: variable '[' • INT ']' OP_ASSIGN expressao

    INT  deslocar, e ir ao estado 105


Estado 73

   19 parm_tipos: TIPO ID '[' ']' •

    $padrão  reduzir usando a regra 19 (parm_tipos)


Estado 74

   17 parm_tipos: parm_tipos TIPO ID '[' • ']'

    ']'  deslocar, e ir ao estado 106


Estado 75

   16 parm_tipos: parm_tipos ',' TIPO ID •

    $padrão  reduzir usando a regra 16 (parm_tipos)


Estado 76

   13 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' • cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_blocks  ir ao estado 107
    cod_block   ir ao estado 41
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 77

   44 expressao_logica: BOOL •

    $padrão  reduzir usando a regra 44 (expressao_logica)


Estado 78

   39 expressao_logica: OP_LOG • op_expressao

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    op_expressao  ir ao estado 108
    termo         ir ao estado 83
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 79

   42 expressao_logica: '(' • op_expressao ')'

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    op_expressao  ir ao estado 109
    termo         ir ao estado 83
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 80

   40 expressao_logica: '!' • op_expressao

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    op_expressao  ir ao estado 110
    termo         ir ao estado 83
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 81

   23 cod_block: IF '(' expressao_logica • ')' '{' cod_blocks '}'
   24          | IF '(' expressao_logica • ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    ')'  deslocar, e ir ao estado 111


Estado 82

   41 expressao_logica: op_expressao • OP_COMP op_expressao
   43                 | op_expressao •
   45 op_expressao: op_expressao • OP_ARITM termo
   47             | op_expressao • ',' termo

    OP_ARITM  deslocar, e ir ao estado 112
    OP_COMP   deslocar, e ir ao estado 113
    ','       deslocar, e ir ao estado 114

    $padrão  reduzir usando a regra 43 (expressao_logica)


Estado 83

   46 op_expressao: termo •

    $padrão  reduzir usando a regra 46 (op_expressao)


Estado 84

   25 cod_block: LACOS '(' expressao_logica • ')' '{' cod_block '}'

    ')'  deslocar, e ir ao estado 115


Estado 85

   36 expressao: '(' • expressao ')'

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 36
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    '('     deslocar, e ir ao estado 85

    expressao     ir ao estado 116
    op_expressao  ir ao estado 87
    termo         ir ao estado 83
    func_call     ir ao estado 88
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 86

   28 cod_block: RETORNO '(' expressao • ')' ';'

    ')'  deslocar, e ir ao estado 117


Estado 87

   37 expressao: op_expressao •
   45 op_expressao: op_expressao • OP_ARITM termo
   47             | op_expressao • ',' termo

    OP_ARITM  deslocar, e ir ao estado 112
    ','       deslocar, e ir ao estado 114

    $padrão  reduzir usando a regra 37 (expressao)


Estado 88

   38 expressao: func_call •

    $padrão  reduzir usando a regra 38 (expressao)


Estado 89

   27 cod_block: RETORNO termo ';' •

    $padrão  reduzir usando a regra 27 (cod_block)


Estado 90

   65 palavra: palavra DIGITO •

    $padrão  reduzir usando a regra 65 (palavra)


Estado 91

   64 palavra: palavra LETRA •

    $padrão  reduzir usando a regra 64 (palavra)


Estado 92

   51 termo: variable '[' • INT ']'

    INT  deslocar, e ir ao estado 118


Estado 93

   69 variable: ID PONTO ID •

    $padrão  reduzir usando a regra 69 (variable)


Estado 94

   61 func_arg: INT •

    $padrão  reduzir usando a regra 61 (func_arg)


Estado 95

   62 func_arg: FLOAT •

    $padrão  reduzir usando a regra 62 (func_arg)


Estado 96

   59 func_arg: ID •
   60         | ID • '[' ID ']'

    '['  deslocar, e ir ao estado 119

    $padrão  reduzir usando a regra 59 (func_arg)


Estado 97

   56 func_call: ID '(' ')' •

    $padrão  reduzir usando a regra 56 (func_call)


Estado 98

   55 func_call: ID '(' func_args • ')'
   57 func_args: func_args • ',' func_arg

    ','  deslocar, e ir ao estado 120
    ')'  deslocar, e ir ao estado 121


Estado 99

   58 func_args: func_arg •

    $padrão  reduzir usando a regra 58 (func_args)


Estado 100

   63 func_arg: palavra •
   64 palavra: palavra • LETRA
   65        | palavra • DIGITO

    DIGITO  deslocar, e ir ao estado 90
    LETRA   deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 63 (func_arg)


Estado 101

   54 print: PRINT '(' termo • ')' ';'

    ')'  deslocar, e ir ao estado 122


Estado 102

   53 scan: SCAN '(' variable • ')'

    ')'  deslocar, e ir ao estado 123


Estado 103

   32 cod_block: scan '(' variable • ')' ';'

    ')'  deslocar, e ir ao estado 124


Estado 104

   34 assign: variable OP_ASSIGN expressao •

    $padrão  reduzir usando a regra 34 (assign)


Estado 105

   35 assign: variable '[' INT • ']' OP_ASSIGN expressao

    ']'  deslocar, e ir ao estado 125


Estado 106

   17 parm_tipos: parm_tipos TIPO ID '[' ']' •

    $padrão  reduzir usando a regra 17 (parm_tipos)


Estado 107

   13 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks • '}'
   21 cod_blocks: cod_blocks • cod_block

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38
    '}'      deslocar, e ir ao estado 126

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_block   ir ao estado 68
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 108

   39 expressao_logica: OP_LOG op_expressao •
   45 op_expressao: op_expressao • OP_ARITM termo
   47             | op_expressao • ',' termo

    OP_ARITM  deslocar, e ir ao estado 112
    ','       deslocar, e ir ao estado 114

    $padrão  reduzir usando a regra 39 (expressao_logica)


Estado 109

   42 expressao_logica: '(' op_expressao • ')'
   45 op_expressao: op_expressao • OP_ARITM termo
   47             | op_expressao • ',' termo

    OP_ARITM  deslocar, e ir ao estado 112
    ','       deslocar, e ir ao estado 114
    ')'       deslocar, e ir ao estado 127


Estado 110

   40 expressao_logica: '!' op_expressao •
   45 op_expressao: op_expressao • OP_ARITM termo
   47             | op_expressao • ',' termo

    OP_ARITM  deslocar, e ir ao estado 112
    ','       deslocar, e ir ao estado 114

    $padrão  reduzir usando a regra 40 (expressao_logica)


Estado 111

   23 cod_block: IF '(' expressao_logica ')' • '{' cod_blocks '}'
   24          | IF '(' expressao_logica ')' • '{' cod_blocks '}' ELSE '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 128


Estado 112

   45 op_expressao: op_expressao OP_ARITM • termo

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    termo     ir ao estado 129
    palavra   ir ao estado 61
    variable  ir ao estado 62


Estado 113

   41 expressao_logica: op_expressao OP_COMP • op_expressao

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    op_expressao  ir ao estado 130
    termo         ir ao estado 83
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 114

   47 op_expressao: op_expressao ',' • termo

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 55
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    termo     ir ao estado 131
    palavra   ir ao estado 61
    variable  ir ao estado 62


Estado 115

   25 cod_block: LACOS '(' expressao_logica ')' • '{' cod_block '}'

    '{'  deslocar, e ir ao estado 132


Estado 116

   36 expressao: '(' expressao • ')'

    ')'  deslocar, e ir ao estado 133


Estado 117

   28 cod_block: RETORNO '(' expressao ')' • ';'

    ';'  deslocar, e ir ao estado 134


Estado 118

   51 termo: variable '[' INT • ']'

    ']'  deslocar, e ir ao estado 135


Estado 119

   60 func_arg: ID '[' • ID ']'

    ID  deslocar, e ir ao estado 136


Estado 120

   57 func_args: func_args ',' • func_arg

    INT     deslocar, e ir ao estado 94
    FLOAT   deslocar, e ir ao estado 95
    ID      deslocar, e ir ao estado 96
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57

    func_arg  ir ao estado 137
    palavra   ir ao estado 100


Estado 121

   55 func_call: ID '(' func_args ')' •

    $padrão  reduzir usando a regra 55 (func_call)


Estado 122

   54 print: PRINT '(' termo ')' • ';'

    ';'  deslocar, e ir ao estado 138


Estado 123

   53 scan: SCAN '(' variable ')' •

    $padrão  reduzir usando a regra 53 (scan)


Estado 124

   32 cod_block: scan '(' variable ')' • ';'

    ';'  deslocar, e ir ao estado 139


Estado 125

   35 assign: variable '[' INT ']' • OP_ASSIGN expressao

    OP_ASSIGN  deslocar, e ir ao estado 140


Estado 126

   13 func_decl: TIPO ID '(' $@1 parm_tipos ')' $@2 '{' cod_blocks '}' •

    $padrão  reduzir usando a regra 13 (func_decl)


Estado 127

   42 expressao_logica: '(' op_expressao ')' •

    $padrão  reduzir usando a regra 42 (expressao_logica)


Estado 128

   23 cod_block: IF '(' expressao_logica ')' '{' • cod_blocks '}'
   24          | IF '(' expressao_logica ')' '{' • cod_blocks '}' ELSE '{' cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_blocks  ir ao estado 141
    cod_block   ir ao estado 41
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 129

   45 op_expressao: op_expressao OP_ARITM termo •

    $padrão  reduzir usando a regra 45 (op_expressao)


Estado 130

   41 expressao_logica: op_expressao OP_COMP op_expressao •
   45 op_expressao: op_expressao • OP_ARITM termo
   47             | op_expressao • ',' termo

    OP_ARITM  deslocar, e ir ao estado 112
    ','       deslocar, e ir ao estado 114

    $padrão  reduzir usando a regra 41 (expressao_logica)


Estado 131

   47 op_expressao: op_expressao ',' termo •

    $padrão  reduzir usando a regra 47 (op_expressao)


Estado 132

   25 cod_block: LACOS '(' expressao_logica ')' '{' • cod_block '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_block   ir ao estado 142
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 133

   36 expressao: '(' expressao ')' •

    $padrão  reduzir usando a regra 36 (expressao)


Estado 134

   28 cod_block: RETORNO '(' expressao ')' ';' •

    $padrão  reduzir usando a regra 28 (cod_block)


Estado 135

   51 termo: variable '[' INT ']' •

    $padrão  reduzir usando a regra 51 (termo)


Estado 136

   60 func_arg: ID '[' ID • ']'

    ']'  deslocar, e ir ao estado 143


Estado 137

   57 func_args: func_args ',' func_arg •

    $padrão  reduzir usando a regra 57 (func_args)


Estado 138

   54 print: PRINT '(' termo ')' ';' •

    $padrão  reduzir usando a regra 54 (print)


Estado 139

   32 cod_block: scan '(' variable ')' ';' •

    $padrão  reduzir usando a regra 32 (cod_block)


Estado 140

   35 assign: variable '[' INT ']' OP_ASSIGN • expressao

    INT     deslocar, e ir ao estado 53
    FLOAT   deslocar, e ir ao estado 54
    ID      deslocar, e ir ao estado 36
    DIGITO  deslocar, e ir ao estado 56
    LETRA   deslocar, e ir ao estado 57
    '('     deslocar, e ir ao estado 85

    expressao     ir ao estado 144
    op_expressao  ir ao estado 87
    termo         ir ao estado 83
    func_call     ir ao estado 88
    palavra       ir ao estado 61
    variable      ir ao estado 62


Estado 141

   21 cod_blocks: cod_blocks • cod_block
   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks • '}'
   24          | IF '(' expressao_logica ')' '{' cod_blocks • '}' ELSE '{' cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38
    '}'      deslocar, e ir ao estado 145

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_block   ir ao estado 68
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 142

   25 cod_block: LACOS '(' expressao_logica ')' '{' cod_block • '}'

    '}'  deslocar, e ir ao estado 146


Estado 143

   60 func_arg: ID '[' ID ']' •

    $padrão  reduzir usando a regra 60 (func_arg)


Estado 144

   35 assign: variable '[' INT ']' OP_ASSIGN expressao •

    $padrão  reduzir usando a regra 35 (assign)


Estado 145

   23 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' •
   24          | IF '(' expressao_logica ')' '{' cod_blocks '}' • ELSE '{' cod_blocks '}'

    ELSE  deslocar, e ir ao estado 147

    $padrão  reduzir usando a regra 23 (cod_block)


Estado 146

   25 cod_block: LACOS '(' expressao_logica ')' '{' cod_block '}' •

    $padrão  reduzir usando a regra 25 (cod_block)


Estado 147

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE • '{' cod_blocks '}'

    '{'  deslocar, e ir ao estado 148


Estado 148

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' • cod_blocks '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_blocks  ir ao estado 149
    cod_block   ir ao estado 41
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 149

   21 cod_blocks: cod_blocks • cod_block
   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks • '}'

    TIPO     deslocar, e ir ao estado 1
    IF       deslocar, e ir ao estado 33
    LACOS    deslocar, e ir ao estado 34
    RETORNO  deslocar, e ir ao estado 35
    TUPLE    deslocar, e ir ao estado 2
    ID       deslocar, e ir ao estado 36
    PRINT    deslocar, e ir ao estado 37
    SCAN     deslocar, e ir ao estado 38
    '}'      deslocar, e ir ao estado 150

    declaracao  ir ao estado 39
    var_decl    ir ao estado 6
    func_decl   ir ao estado 7
    cod_block   ir ao estado 68
    assign      ir ao estado 42
    scan        ir ao estado 43
    print       ir ao estado 44
    func_call   ir ao estado 45
    variable    ir ao estado 46


Estado 150

   24 cod_block: IF '(' expressao_logica ')' '{' cod_blocks '}' ELSE '{' cod_blocks '}' •

    $padrão  reduzir usando a regra 24 (cod_block)
